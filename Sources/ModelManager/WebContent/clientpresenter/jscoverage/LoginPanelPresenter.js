/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['LoginPanelPresenter.js']) {
  _$jscoverage['LoginPanelPresenter.js'] = [];
  _$jscoverage['LoginPanelPresenter.js'][10] = 0;
  _$jscoverage['LoginPanelPresenter.js'][20] = 0;
  _$jscoverage['LoginPanelPresenter.js'][22] = 0;
  _$jscoverage['LoginPanelPresenter.js'][24] = 0;
  _$jscoverage['LoginPanelPresenter.js'][35] = 0;
  _$jscoverage['LoginPanelPresenter.js'][36] = 0;
  _$jscoverage['LoginPanelPresenter.js'][37] = 0;
  _$jscoverage['LoginPanelPresenter.js'][38] = 0;
  _$jscoverage['LoginPanelPresenter.js'][39] = 0;
  _$jscoverage['LoginPanelPresenter.js'][40] = 0;
  _$jscoverage['LoginPanelPresenter.js'][42] = 0;
  _$jscoverage['LoginPanelPresenter.js'][43] = 0;
  _$jscoverage['LoginPanelPresenter.js'][44] = 0;
  _$jscoverage['LoginPanelPresenter.js'][45] = 0;
  _$jscoverage['LoginPanelPresenter.js'][47] = 0;
  _$jscoverage['LoginPanelPresenter.js'][48] = 0;
  _$jscoverage['LoginPanelPresenter.js'][61] = 0;
  _$jscoverage['LoginPanelPresenter.js'][62] = 0;
  _$jscoverage['LoginPanelPresenter.js'][63] = 0;
  _$jscoverage['LoginPanelPresenter.js'][65] = 0;
  _$jscoverage['LoginPanelPresenter.js'][67] = 0;
  _$jscoverage['LoginPanelPresenter.js'][78] = 0;
  _$jscoverage['LoginPanelPresenter.js'][79] = 0;
  _$jscoverage['LoginPanelPresenter.js'][80] = 0;
  _$jscoverage['LoginPanelPresenter.js'][81] = 0;
  _$jscoverage['LoginPanelPresenter.js'][82] = 0;
  _$jscoverage['LoginPanelPresenter.js'][83] = 0;
  _$jscoverage['LoginPanelPresenter.js'][84] = 0;
  _$jscoverage['LoginPanelPresenter.js'][85] = 0;
  _$jscoverage['LoginPanelPresenter.js'][86] = 0;
  _$jscoverage['LoginPanelPresenter.js'][98] = 0;
  _$jscoverage['LoginPanelPresenter.js'][99] = 0;
  _$jscoverage['LoginPanelPresenter.js'][100] = 0;
  _$jscoverage['LoginPanelPresenter.js'][101] = 0;
  _$jscoverage['LoginPanelPresenter.js'][102] = 0;
  _$jscoverage['LoginPanelPresenter.js'][103] = 0;
  _$jscoverage['LoginPanelPresenter.js'][104] = 0;
  _$jscoverage['LoginPanelPresenter.js'][116] = 0;
  _$jscoverage['LoginPanelPresenter.js'][117] = 0;
  _$jscoverage['LoginPanelPresenter.js'][118] = 0;
  _$jscoverage['LoginPanelPresenter.js'][119] = 0;
  _$jscoverage['LoginPanelPresenter.js'][120] = 0;
  _$jscoverage['LoginPanelPresenter.js'][121] = 0;
  _$jscoverage['LoginPanelPresenter.js'][122] = 0;
  _$jscoverage['LoginPanelPresenter.js'][123] = 0;
  _$jscoverage['LoginPanelPresenter.js'][139] = 0;
  _$jscoverage['LoginPanelPresenter.js'][140] = 0;
  _$jscoverage['LoginPanelPresenter.js'][141] = 0;
  _$jscoverage['LoginPanelPresenter.js'][142] = 0;
  _$jscoverage['LoginPanelPresenter.js'][143] = 0;
  _$jscoverage['LoginPanelPresenter.js'][144] = 0;
  _$jscoverage['LoginPanelPresenter.js'][155] = 0;
  _$jscoverage['LoginPanelPresenter.js'][157] = 0;
  _$jscoverage['LoginPanelPresenter.js'][158] = 0;
  _$jscoverage['LoginPanelPresenter.js'][159] = 0;
  _$jscoverage['LoginPanelPresenter.js'][163] = 0;
  _$jscoverage['LoginPanelPresenter.js'][164] = 0;
  _$jscoverage['LoginPanelPresenter.js'][166] = 0;
  _$jscoverage['LoginPanelPresenter.js'][167] = 0;
  _$jscoverage['LoginPanelPresenter.js'][169] = 0;
  _$jscoverage['LoginPanelPresenter.js'][170] = 0;
  _$jscoverage['LoginPanelPresenter.js'][171] = 0;
  _$jscoverage['LoginPanelPresenter.js'][172] = 0;
  _$jscoverage['LoginPanelPresenter.js'][174] = 0;
  _$jscoverage['LoginPanelPresenter.js'][175] = 0;
  _$jscoverage['LoginPanelPresenter.js'][176] = 0;
  _$jscoverage['LoginPanelPresenter.js'][177] = 0;
  _$jscoverage['LoginPanelPresenter.js'][178] = 0;
  _$jscoverage['LoginPanelPresenter.js'][179] = 0;
  _$jscoverage['LoginPanelPresenter.js'][181] = 0;
  _$jscoverage['LoginPanelPresenter.js'][182] = 0;
  _$jscoverage['LoginPanelPresenter.js'][183] = 0;
  _$jscoverage['LoginPanelPresenter.js'][184] = 0;
  _$jscoverage['LoginPanelPresenter.js'][186] = 0;
  _$jscoverage['LoginPanelPresenter.js'][187] = 0;
  _$jscoverage['LoginPanelPresenter.js'][189] = 0;
  _$jscoverage['LoginPanelPresenter.js'][193] = 0;
  _$jscoverage['LoginPanelPresenter.js'][194] = 0;
  _$jscoverage['LoginPanelPresenter.js'][195] = 0;
  _$jscoverage['LoginPanelPresenter.js'][196] = 0;
  _$jscoverage['LoginPanelPresenter.js'][209] = 0;
  _$jscoverage['LoginPanelPresenter.js'][210] = 0;
  _$jscoverage['LoginPanelPresenter.js'][211] = 0;
  _$jscoverage['LoginPanelPresenter.js'][212] = 0;
  _$jscoverage['LoginPanelPresenter.js'][214] = 0;
  _$jscoverage['LoginPanelPresenter.js'][215] = 0;
  _$jscoverage['LoginPanelPresenter.js'][216] = 0;
  _$jscoverage['LoginPanelPresenter.js'][218] = 0;
  _$jscoverage['LoginPanelPresenter.js'][231] = 0;
  _$jscoverage['LoginPanelPresenter.js'][232] = 0;
  _$jscoverage['LoginPanelPresenter.js'][233] = 0;
  _$jscoverage['LoginPanelPresenter.js'][234] = 0;
  _$jscoverage['LoginPanelPresenter.js'][236] = 0;
  _$jscoverage['LoginPanelPresenter.js'][250] = 0;
  _$jscoverage['LoginPanelPresenter.js'][252] = 0;
  _$jscoverage['LoginPanelPresenter.js'][253] = 0;
  _$jscoverage['LoginPanelPresenter.js'][254] = 0;
  _$jscoverage['LoginPanelPresenter.js'][255] = 0;
  _$jscoverage['LoginPanelPresenter.js'][256] = 0;
  _$jscoverage['LoginPanelPresenter.js'][257] = 0;
  _$jscoverage['LoginPanelPresenter.js'][258] = 0;
  _$jscoverage['LoginPanelPresenter.js'][268] = 0;
  _$jscoverage['LoginPanelPresenter.js'][269] = 0;
  _$jscoverage['LoginPanelPresenter.js'][270] = 0;
  _$jscoverage['LoginPanelPresenter.js'][283] = 0;
  _$jscoverage['LoginPanelPresenter.js'][284] = 0;
  _$jscoverage['LoginPanelPresenter.js'][285] = 0;
  _$jscoverage['LoginPanelPresenter.js'][287] = 0;
  _$jscoverage['LoginPanelPresenter.js'][288] = 0;
  _$jscoverage['LoginPanelPresenter.js'][291] = 0;
  _$jscoverage['LoginPanelPresenter.js'][292] = 0;
  _$jscoverage['LoginPanelPresenter.js'][295] = 0;
  _$jscoverage['LoginPanelPresenter.js'][298] = 0;
  _$jscoverage['LoginPanelPresenter.js'][300] = 0;
  _$jscoverage['LoginPanelPresenter.js'][301] = 0;
  _$jscoverage['LoginPanelPresenter.js'][302] = 0;
  _$jscoverage['LoginPanelPresenter.js'][304] = 0;
  _$jscoverage['LoginPanelPresenter.js'][305] = 0;
  _$jscoverage['LoginPanelPresenter.js'][306] = 0;
  _$jscoverage['LoginPanelPresenter.js'][307] = 0;
  _$jscoverage['LoginPanelPresenter.js'][308] = 0;
  _$jscoverage['LoginPanelPresenter.js'][309] = 0;
  _$jscoverage['LoginPanelPresenter.js'][311] = 0;
  _$jscoverage['LoginPanelPresenter.js'][312] = 0;
  _$jscoverage['LoginPanelPresenter.js'][315] = 0;
  _$jscoverage['LoginPanelPresenter.js'][317] = 0;
  _$jscoverage['LoginPanelPresenter.js'][318] = 0;
  _$jscoverage['LoginPanelPresenter.js'][319] = 0;
  _$jscoverage['LoginPanelPresenter.js'][321] = 0;
  _$jscoverage['LoginPanelPresenter.js'][322] = 0;
  _$jscoverage['LoginPanelPresenter.js'][323] = 0;
  _$jscoverage['LoginPanelPresenter.js'][324] = 0;
  _$jscoverage['LoginPanelPresenter.js'][325] = 0;
  _$jscoverage['LoginPanelPresenter.js'][326] = 0;
  _$jscoverage['LoginPanelPresenter.js'][328] = 0;
  _$jscoverage['LoginPanelPresenter.js'][329] = 0;
  _$jscoverage['LoginPanelPresenter.js'][332] = 0;
  _$jscoverage['LoginPanelPresenter.js'][333] = 0;
  _$jscoverage['LoginPanelPresenter.js'][334] = 0;
  _$jscoverage['LoginPanelPresenter.js'][335] = 0;
  _$jscoverage['LoginPanelPresenter.js'][336] = 0;
  _$jscoverage['LoginPanelPresenter.js'][337] = 0;
  _$jscoverage['LoginPanelPresenter.js'][338] = 0;
  _$jscoverage['LoginPanelPresenter.js'][339] = 0;
  _$jscoverage['LoginPanelPresenter.js'][340] = 0;
  _$jscoverage['LoginPanelPresenter.js'][341] = 0;
  _$jscoverage['LoginPanelPresenter.js'][343] = 0;
  _$jscoverage['LoginPanelPresenter.js'][347] = 0;
  _$jscoverage['LoginPanelPresenter.js'][348] = 0;
  _$jscoverage['LoginPanelPresenter.js'][349] = 0;
  _$jscoverage['LoginPanelPresenter.js'][350] = 0;
  _$jscoverage['LoginPanelPresenter.js'][353] = 0;
  _$jscoverage['LoginPanelPresenter.js'][354] = 0;
  _$jscoverage['LoginPanelPresenter.js'][357] = 0;
  _$jscoverage['LoginPanelPresenter.js'][358] = 0;
  _$jscoverage['LoginPanelPresenter.js'][359] = 0;
  _$jscoverage['LoginPanelPresenter.js'][360] = 0;
  _$jscoverage['LoginPanelPresenter.js'][361] = 0;
  _$jscoverage['LoginPanelPresenter.js'][362] = 0;
  _$jscoverage['LoginPanelPresenter.js'][363] = 0;
  _$jscoverage['LoginPanelPresenter.js'][364] = 0;
  _$jscoverage['LoginPanelPresenter.js'][366] = 0;
  _$jscoverage['LoginPanelPresenter.js'][371] = 0;
  _$jscoverage['LoginPanelPresenter.js'][372] = 0;
  _$jscoverage['LoginPanelPresenter.js'][373] = 0;
  _$jscoverage['LoginPanelPresenter.js'][374] = 0;
  _$jscoverage['LoginPanelPresenter.js'][377] = 0;
  _$jscoverage['LoginPanelPresenter.js'][378] = 0;
  _$jscoverage['LoginPanelPresenter.js'][379] = 0;
  _$jscoverage['LoginPanelPresenter.js'][380] = 0;
  _$jscoverage['LoginPanelPresenter.js'][381] = 0;
  _$jscoverage['LoginPanelPresenter.js'][384] = 0;
}
_$jscoverage['LoginPanelPresenter.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * Presenter incaricato di gestire il pannello di login</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * @constructor</span>","<span class=\"c\"> * @this {LoginPanelPresenter}</span>","<span class=\"c\"> * @param {String}</span>","<span class=\"c\"> *            url URL della servlet con cui il presenter deve comunicare</span>","<span class=\"c\"> * @author Diego Beraldin</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> LoginPanelPresenter<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"c\">/***************************************************************************</span>","<span class=\"c\">     * VARIABILI PRIVATE</span>","<span class=\"c\">     **************************************************************************/</span>","    <span class=\"c\">/*</span>","<span class=\"c\">    * 0 = LoginAutentication 1 = LoginClose 2 = LoginGetSecretQuestion 3 =</span>","<span class=\"c\">    * LoginDoSecretAnswer 4 = LoginDoRegistration</span>","<span class=\"c\">    */</span>","","    <span class=\"c\">// elemento controllato da questo presenter</span>","    <span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"LoginPanel\"</span><span class=\"k\">);</span>","    <span class=\"c\">// array degli URL delle servlet che sono utilizzate qui dentro</span>","    <span class=\"k\">var</span> servlets <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","    <span class=\"c\">// inizializza gli URL delle servlet</span>","    getServletURLs<span class=\"k\">();</span>","","    <span class=\"c\">/***************************************************************************</span>","<span class=\"c\">     * METODI PRIVATI</span>","<span class=\"c\">     **************************************************************************/</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * Configura gli URL delle servlet da interrogare leggendoli dal file di</span>","<span class=\"c\">     * configurazione</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getServletURLs<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> configurationRequest <span class=\"k\">=</span> <span class=\"k\">new</span> XMLHttpRequest<span class=\"k\">();</span>","        configurationRequest<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"s\">\"POST\"</span><span class=\"k\">,</span> configurationFile<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","        configurationRequest<span class=\"k\">.</span>send<span class=\"k\">();</span>","        <span class=\"k\">var</span> XMLDocument <span class=\"k\">=</span> configurationRequest<span class=\"k\">.</span>responseXML<span class=\"k\">;</span>","        <span class=\"k\">var</span> baseURL <span class=\"k\">=</span> XMLDocument<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"baseURL\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>childNodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>data<span class=\"k\">;</span>","","        <span class=\"k\">var</span> names <span class=\"k\">=</span> Array<span class=\"k\">();</span>","        names<span class=\"k\">.</span>push<span class=\"k\">(</span>XMLDocument<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"authentication\"</span><span class=\"k\">).</span>childNodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>data<span class=\"k\">);</span>","        names<span class=\"k\">.</span>push<span class=\"k\">(</span>XMLDocument<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"question\"</span><span class=\"k\">).</span>childNodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>data<span class=\"k\">);</span>","        names<span class=\"k\">.</span>push<span class=\"k\">(</span>XMLDocument<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"answer\"</span><span class=\"k\">).</span>childNodes<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>data<span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> names<span class=\"k\">)</span> <span class=\"k\">{</span>","            servlets<span class=\"k\">.</span>push<span class=\"k\">(</span>baseURL <span class=\"k\">+</span> names<span class=\"k\">[</span>i<span class=\"k\">]);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Testa quanto ricevuto dal server e, in caso di login avvenuto</span>","<span class=\"c\">     * correttamente reindirizza il browser nella pagina finale dopo aver</span>","<span class=\"c\">     * salvato i dati dell'utente</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @param {String}</span>","<span class=\"c\">     *            data la stringa restituita dalla servlet a seguito del login</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> testCredentials<span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> user <span class=\"k\">=</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">(</span>data<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>user <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// 'communicationcenter' deve essere una variabile globale</span>","            communicationcenter<span class=\"k\">.</span>my <span class=\"k\">=</span> user<span class=\"k\">;</span>","            <span class=\"c\">//communicationcenter.connect();</span>","            mediator<span class=\"k\">.</span>buildUI<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Rimuove il form di recupero della password, visualizza un messaggio di</span>","<span class=\"c\">     * conferma per 2 secondi quindi rimuove anche questo e lascia il controllo</span>","<span class=\"c\">     * al form di login.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> correctAnswer<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> formRetrievePassword <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"passwordretrieval\"</span><span class=\"k\">);</span>","        element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>formRetrievePassword<span class=\"k\">);</span>","        <span class=\"k\">var</span> message <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"p\"</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> text <span class=\"k\">=</span> document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">\"Recupero password avvenuto correttamente.\"</span> <span class=\"k\">+</span> <span class=\"s\">\"Ti &#195;&#168; stata inviata un'email contenente i dati richiesti.\"</span><span class=\"k\">);</span>","        message<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>text<span class=\"k\">);</span>","        element<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>message<span class=\"k\">);</span>","        window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>message<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">2000</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * In caso di inserimento della risposta non corretta alla domanda segreta</span>","<span class=\"c\">     * visualizza un messaggio di avvertimento all'utente per 2 secondi quindi</span>","<span class=\"c\">     * lascia il controllo al form di inserimento della risposta alla domanda</span>","<span class=\"c\">     * segreta.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> incorrectAnswer<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> message <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"p\"</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> text <span class=\"k\">=</span> document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">\"Dati non corretti. Inserire nuovamente la risposta.\"</span><span class=\"k\">);</span>","        message<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>text<span class=\"k\">);</span>","        element<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>message<span class=\"k\">);</span>","        window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>message<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">2000</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Recupera la domanda segreta con una richiesta asincrona al server</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @param {String}</span>","<span class=\"c\">     *            username username dell'utente di cui recuperare la domanda</span>","<span class=\"c\">     * @returns {String} la domanda segreta impostata dall'utente</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getSecretQuestion<span class=\"k\">(</span>username<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> question <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> request <span class=\"k\">=</span> <span class=\"k\">new</span> XMLHttpRequest<span class=\"k\">();</span>","        request<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"s\">\"POST\"</span><span class=\"k\">,</span> servlets<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> <span class=\"k\">false</span><span class=\"k\">);</span>","        request<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span><span class=\"s\">\"Content-type\"</span><span class=\"k\">,</span> <span class=\"s\">\"application/x-www-form-urlencoded\"</span><span class=\"k\">);</span>","        request<span class=\"k\">.</span>send<span class=\"k\">(</span><span class=\"s\">\"username=\"</span> <span class=\"k\">+</span> encodeURIComponent<span class=\"k\">(</span>username<span class=\"k\">));</span>","        question <span class=\"k\">=</span> request<span class=\"k\">.</span>responseText<span class=\"k\">;</span>","        <span class=\"k\">return</span> question<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/***************************************************************************</span>","<span class=\"c\">     * METODI PUBBLICI</span>","<span class=\"c\">     **************************************************************************/</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * Testa se l'utente ha dato la risposta corretta alla domanda segreta</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @param {String}</span>","<span class=\"c\">     *            username nome utente associato alla domanda segreta</span>","<span class=\"c\">     * @param {String}</span>","<span class=\"c\">     *            answer risposta alla domanda segreta</span>","<span class=\"c\">     * @returns {Boolean} true se la risposta &#195;&#168; corretta, false altrimenti</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>hasAnsweredCorrectly <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>username<span class=\"k\">,</span> answer<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> request <span class=\"k\">=</span> <span class=\"k\">new</span> XMLHttpRequest<span class=\"k\">();</span>","        request<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"s\">\"POST\"</span><span class=\"k\">,</span> servlets<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">],</span> <span class=\"k\">false</span><span class=\"k\">);</span>","        request<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span><span class=\"s\">\"Content-type\"</span><span class=\"k\">,</span> <span class=\"s\">\"application/x-www-form-urlencoded\"</span><span class=\"k\">);</span>","        request<span class=\"k\">.</span>send<span class=\"k\">(</span><span class=\"s\">\"username=\"</span> <span class=\"k\">+</span> encodeURIComponent<span class=\"k\">(</span>username<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"&amp;answer=\"</span> <span class=\"k\">+</span> encodeURIComponent<span class=\"k\">(</span>answer<span class=\"k\">));</span>","        <span class=\"k\">return</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">(</span>request<span class=\"k\">.</span>responseText<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Costruisce il form per il recupero della password dell'utente</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @param {String}</span>","<span class=\"c\">     *            username l'email dell'utente</span>","<span class=\"c\">     * @returns {HTMLFormElement} il form per il recupero della password</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>buildRetrievePasswordForm <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"c\">// elimina il form se &#195;&#168; gi&#195;&#160; presente</span>","        <span class=\"k\">var</span> oldForm <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"passwordretrieval\"</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>oldForm <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>oldForm<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// costruisce il form con il valore ottenuto</span>","        <span class=\"k\">var</span> formRetrievePassword <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"fieldset\"</span><span class=\"k\">);</span>","        formRetrievePassword<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"passwordretrieval\"</span><span class=\"k\">;</span>","        <span class=\"c\">// etichetta con la domanda</span>","        <span class=\"k\">var</span> labelQuestion <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"label\"</span><span class=\"k\">);</span>","        labelQuestion<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"for\"</span><span class=\"k\">,</span> <span class=\"s\">\"inputanswer\"</span><span class=\"k\">);</span>","        <span class=\"c\">// procura il testo della domanda segreta</span>","        <span class=\"k\">var</span> name <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getUsername<span class=\"k\">();</span>","        <span class=\"k\">var</span> text <span class=\"k\">=</span> getSecretQuestion<span class=\"k\">(</span>name<span class=\"k\">);</span>","        <span class=\"k\">var</span> question <span class=\"k\">=</span> document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span>text<span class=\"k\">);</span>","        labelQuestion<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>question<span class=\"k\">);</span>","        <span class=\"c\">// campo di immissione</span>","        <span class=\"k\">var</span> inputAnswer <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"input\"</span><span class=\"k\">);</span>","        inputAnswer<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"text\"</span><span class=\"k\">;</span>","        inputAnswer<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"inputanswer\"</span><span class=\"k\">;</span>","        inputAnswer<span class=\"k\">.</span>name <span class=\"k\">=</span> <span class=\"s\">\"inputanswer\"</span><span class=\"k\">;</span>","        inputAnswer<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"placeholder\"</span><span class=\"k\">,</span> <span class=\"s\">\"risposta\"</span><span class=\"k\">);</span>","        inputAnswer<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"required\"</span><span class=\"k\">,</span> <span class=\"s\">\"required\"</span><span class=\"k\">);</span>","        <span class=\"c\">// pulsante di conferma</span>","        <span class=\"k\">var</span> submitButton <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"input\"</span><span class=\"k\">);</span>","        submitButton<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"type\"</span><span class=\"k\">,</span> <span class=\"s\">\"submit\"</span><span class=\"k\">);</span>","        submitButton<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"value\"</span><span class=\"k\">,</span> <span class=\"s\">\"OK\"</span><span class=\"k\">);</span>","        submitButton<span class=\"k\">.</span>onClick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"c\">// Answer(username, inputAnswer.getAttribute(\"value\"));</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>hasAnsweredCorrectly<span class=\"k\">(</span>username<span class=\"k\">,</span> inputAnswer<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"value\"</span><span class=\"k\">)))</span> <span class=\"k\">{</span>","                correctAnswer<span class=\"k\">();</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                incorrectAnswer<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        formRetrievePassword<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>labelQuestion<span class=\"k\">);</span>","        formRetrievePassword<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>inputAnswer<span class=\"k\">);</span>","        formRetrievePassword<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>submitButton<span class=\"k\">);</span>","        <span class=\"k\">return</span> formRetrievePassword<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Recupera lo username dall'interfaccia grafica utente</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * NOTA PER I VERIFICATORI Richiede che il 'document' abbia al suo interno</span>","<span class=\"c\">     * un elemento di tipo '&lt;input&gt;' con 'id' uguale a 'username' contenente</span>","<span class=\"c\">     * l'indirizzo email dell'utente che intende autenticarsi al sistema</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     * @returns {String} lo username dell'utente</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>getUsername <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> username <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"username\"</span><span class=\"k\">).</span>value<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>username <span class=\"k\">||</span> username<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">throw</span> <span class=\"s\">\"indirizzo email non specificato\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> emailRegex <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"^[A-Z0-9._%+-]+@[A-Z0-9.-]+</span><span class=\"t\">\\.</span><span class=\"s\">[A-Z]{2,4}$\"</span><span class=\"k\">,</span> <span class=\"s\">\"i\"</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>emailRegex<span class=\"k\">.</span>test<span class=\"k\">(</span>username<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">throw</span> <span class=\"s\">\"indirizzo email non valido\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> username<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Recupera lo username dall'interfaccia grafica utente</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * NOTA PER I VERIFICATORI Richiede che il 'document' abbia al suo interno</span>","<span class=\"c\">     * un elemento di tipo '&lt;input&gt;' con 'id' uguale a 'password' contenente la</span>","<span class=\"c\">     * password dell'utente che intende autenticarsi al sistema</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     * @returns {String} lo username dell'utente</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>getPassword <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> password <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"password\"</span><span class=\"k\">).</span>value<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>password <span class=\"k\">||</span> password<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">throw</span> <span class=\"s\">\"password non specificata\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> password<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Procedura che esegue il login inviando al server i dati di autenticazione</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * NOTE PER I VERIFICATORI Testare communicationcenter.my al termine della</span>","<span class=\"c\">     * procedura di login!!!</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @param {Object}</span>","<span class=\"c\">     *            un oggetto con propriet&#195;&#160; 'username' e 'password'</span>","<span class=\"c\">     * @returns {String} la string di query che viene inviata alla servlet</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>login <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"c\">// invia la richiesta AJAX al server</span>","        <span class=\"k\">var</span> request <span class=\"k\">=</span> <span class=\"k\">new</span> XMLHttpRequest<span class=\"k\">();</span>","        request<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"s\">\"POST\"</span><span class=\"k\">,</span> servlets<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"k\">false</span><span class=\"k\">);</span>","        request<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span><span class=\"s\">\"Content-type\"</span><span class=\"k\">,</span> <span class=\"s\">\"application/x-www-form-urlencoded\"</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> querystring <span class=\"k\">=</span> <span class=\"s\">\"username=\"</span> <span class=\"k\">+</span> encodeURIComponent<span class=\"k\">(</span>data<span class=\"k\">.</span>username<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"&amp;password=\"</span> <span class=\"k\">+</span> encodeURIComponent<span class=\"k\">(</span>data<span class=\"k\">.</span>password<span class=\"k\">);</span>","        request<span class=\"k\">.</span>send<span class=\"k\">(</span>querystring<span class=\"k\">);</span>","        testCredentials<span class=\"k\">(</span>request<span class=\"k\">.</span>responseText<span class=\"k\">);</span>","        <span class=\"k\">return</span> querystring<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Nasconde il form di autenticazione per lasciare spazio nella finestra a</span>","<span class=\"c\">     * altri elementi grafici come la schermata principale o il pannello di</span>","<span class=\"c\">     * registrazione</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>hide <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","            element<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">\"none\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Inizializzazione del pannello di login con la creazione di tutti i widget</span>","<span class=\"c\">     * grafici che sono contenuti al suo interno</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * NOTA PER I VERIFICATORI: Richiede che nel 'document' sia presente un</span>","<span class=\"c\">     * elemento '&lt;div&gt;' che abbia come attributo 'id' il valore 'LoginPanel'</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * @author Diego Beraldin</span>","<span class=\"c\">     */</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>initialize <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        element<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        element<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">\"block\"</span><span class=\"k\">;</span>","        <span class=\"c\">// creazione dell'elemento form</span>","        <span class=\"k\">var</span> loginForm <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'fieldset'</span><span class=\"k\">);</span>","        loginForm<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"loginForm\"</span><span class=\"k\">;</span>","","        <span class=\"c\">// div per logo</span>","        <span class=\"k\">var</span> divLogo <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","        divLogo<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"logo\"</span><span class=\"k\">;</span>","","        <span class=\"c\">// creazione dell'elemento &lt;ul&gt; contenuto nel form</span>","        <span class=\"k\">var</span> ulData <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'ul'</span><span class=\"k\">);</span>","","        <span class=\"c\">// creazione dell'item per lo username</span>","        <span class=\"k\">var</span> liUserName <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","        <span class=\"c\">// label</span>","        <span class=\"k\">var</span> labelUserName <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'label'</span><span class=\"k\">);</span>","        labelUserName<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"for\"</span><span class=\"k\">,</span> <span class=\"s\">\"username\"</span><span class=\"k\">);</span>","        labelUserName<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"Nome utente: \"</span><span class=\"k\">;</span>","        <span class=\"c\">// input</span>","        <span class=\"k\">var</span> inputUserName <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'input'</span><span class=\"k\">);</span>","        inputUserName<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"email\"</span><span class=\"k\">;</span>","        inputUserName<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"username\"</span><span class=\"k\">;</span>","        inputUserName<span class=\"k\">.</span>name <span class=\"k\">=</span> <span class=\"s\">\"username\"</span><span class=\"k\">;</span>","        inputUserName<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"placeholder\"</span><span class=\"k\">,</span> <span class=\"s\">\"yourname@email.com\"</span><span class=\"k\">);</span>","        inputUserName<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"required\"</span><span class=\"k\">,</span> <span class=\"s\">\"required\"</span><span class=\"k\">);</span>","        <span class=\"c\">// costruisce il list item con la label e l'input</span>","        liUserName<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>labelUserName<span class=\"k\">);</span>","        liUserName<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>inputUserName<span class=\"k\">);</span>","","        <span class=\"c\">// crea l'item per la password</span>","        <span class=\"k\">var</span> liPassword <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","        <span class=\"c\">// label</span>","        <span class=\"k\">var</span> labelPassword <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'label'</span><span class=\"k\">);</span>","        labelPassword<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"for\"</span><span class=\"k\">,</span> <span class=\"s\">\"password\"</span><span class=\"k\">);</span>","        labelPassword<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"Password: \"</span><span class=\"k\">;</span>","        <span class=\"c\">// input</span>","        <span class=\"k\">var</span> inputPassword <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'input'</span><span class=\"k\">);</span>","        inputPassword<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"password\"</span><span class=\"k\">;</span>","        inputPassword<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"password\"</span><span class=\"k\">;</span>","        inputPassword<span class=\"k\">.</span>name <span class=\"k\">=</span> <span class=\"s\">\"password\"</span><span class=\"k\">;</span>","        inputPassword<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"placeholder\"</span><span class=\"k\">,</span> <span class=\"s\">\"password\"</span><span class=\"k\">);</span>","        inputPassword<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"required\"</span><span class=\"k\">,</span> <span class=\"s\">\"required\"</span><span class=\"k\">);</span>","        <span class=\"c\">// costruisce il list item con la label e l'input</span>","        liPassword<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>labelPassword<span class=\"k\">);</span>","        liPassword<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>inputPassword<span class=\"k\">);</span>","","        <span class=\"c\">// pulsante di login</span>","        <span class=\"k\">var</span> inputLogin <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'button'</span><span class=\"k\">);</span>","        inputLogin<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"submit\"</span><span class=\"k\">;</span>","        inputLogin<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">'Login'</span><span class=\"k\">));</span>","        <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        inputLogin<span class=\"k\">.</span>onclick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> data <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","                data<span class=\"k\">.</span>username <span class=\"k\">=</span> self<span class=\"k\">.</span>getUsername<span class=\"k\">();</span>","                data<span class=\"k\">.</span>password <span class=\"k\">=</span> self<span class=\"k\">.</span>getPassword<span class=\"k\">();</span>","                self<span class=\"k\">.</span>login<span class=\"k\">(</span>data<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","                alert<span class=\"k\">(</span>err<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"c\">// pulsante di registrazione</span>","        <span class=\"k\">var</span> inputRegister <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'button'</span><span class=\"k\">);</span>","        inputRegister<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"submit\"</span><span class=\"k\">;</span>","        inputRegister<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">'Registrazione'</span><span class=\"k\">));</span>","        inputRegister<span class=\"k\">.</span>onclick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"c\">//FIXME crea errore di duplicazione RegisterUI se gi&#195;&#160; premuti in</span>","            <span class=\"c\">// precedenza</span>","            self<span class=\"k\">.</span>hide<span class=\"k\">();</span>","            mediator<span class=\"k\">.</span>buildRegistrationUI<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"c\">// pulsante per recuperare la password</span>","        <span class=\"k\">var</span> inputRetrievePassword <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"button\"</span><span class=\"k\">);</span>","        inputRetrievePassword<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"submit\"</span><span class=\"k\">;</span>","        <span class=\"k\">;</span>","        inputRetrievePassword<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">'Recupera password'</span><span class=\"k\">));</span>","        inputRetrievePassword<span class=\"k\">.</span>onclick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> form <span class=\"k\">=</span> self<span class=\"k\">.</span>buildRetrievePasswordForm<span class=\"k\">();</span>","                element<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>form<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","                alert<span class=\"k\">(</span>err<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">// creazione dell'item per i pulsanti</span>","        <span class=\"k\">var</span> liButtons <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","        liButtons<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>inputLogin<span class=\"k\">);</span>","        liButtons<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>inputRegister<span class=\"k\">);</span>","        liButtons<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>inputRetrievePassword<span class=\"k\">);</span>","","        <span class=\"c\">// appende tutti gli elementi al form</span>","        ulData<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>liUserName<span class=\"k\">);</span>","        ulData<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>liPassword<span class=\"k\">);</span>","        ulData<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>liButtons<span class=\"k\">);</span>","        loginForm<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>divLogo<span class=\"k\">);</span>","        loginForm<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>ulData<span class=\"k\">);</span>","","        <span class=\"c\">// appende il form al DOM della pagina</span>","        element<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>loginForm<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>"];
_$jscoverage['LoginPanelPresenter.js'][10]++;
function LoginPanelPresenter() {
  _$jscoverage['LoginPanelPresenter.js'][20]++;
  var element = document.getElementById("LoginPanel");
  _$jscoverage['LoginPanelPresenter.js'][22]++;
  var servlets = new Array();
  _$jscoverage['LoginPanelPresenter.js'][24]++;
  getServletURLs();
  _$jscoverage['LoginPanelPresenter.js'][35]++;
  function getServletURLs() {
    _$jscoverage['LoginPanelPresenter.js'][36]++;
    var configurationRequest = new XMLHttpRequest();
    _$jscoverage['LoginPanelPresenter.js'][37]++;
    configurationRequest.open("POST", configurationFile, false);
    _$jscoverage['LoginPanelPresenter.js'][38]++;
    configurationRequest.send();
    _$jscoverage['LoginPanelPresenter.js'][39]++;
    var XMLDocument = configurationRequest.responseXML;
    _$jscoverage['LoginPanelPresenter.js'][40]++;
    var baseURL = XMLDocument.getElementsByTagName("baseURL")[0].childNodes[0].data;
    _$jscoverage['LoginPanelPresenter.js'][42]++;
    var names = Array();
    _$jscoverage['LoginPanelPresenter.js'][43]++;
    names.push(XMLDocument.getElementById("authentication").childNodes[0].data);
    _$jscoverage['LoginPanelPresenter.js'][44]++;
    names.push(XMLDocument.getElementById("question").childNodes[0].data);
    _$jscoverage['LoginPanelPresenter.js'][45]++;
    names.push(XMLDocument.getElementById("answer").childNodes[0].data);
    _$jscoverage['LoginPanelPresenter.js'][47]++;
    for (var i in names) {
      _$jscoverage['LoginPanelPresenter.js'][48]++;
      servlets.push((baseURL + names[i]));
}
}
  _$jscoverage['LoginPanelPresenter.js'][61]++;
  function testCredentials(data) {
    _$jscoverage['LoginPanelPresenter.js'][62]++;
    var user = JSON.parse(data);
    _$jscoverage['LoginPanelPresenter.js'][63]++;
    if ((user != null)) {
      _$jscoverage['LoginPanelPresenter.js'][65]++;
      communicationcenter.my = user;
      _$jscoverage['LoginPanelPresenter.js'][67]++;
      mediator.buildUI();
    }
}
  _$jscoverage['LoginPanelPresenter.js'][78]++;
  function correctAnswer() {
    _$jscoverage['LoginPanelPresenter.js'][79]++;
    var formRetrievePassword = document.getElementById("passwordretrieval");
    _$jscoverage['LoginPanelPresenter.js'][80]++;
    element.removeChild(formRetrievePassword);
    _$jscoverage['LoginPanelPresenter.js'][81]++;
    var message = document.createElement("p");
    _$jscoverage['LoginPanelPresenter.js'][82]++;
    var text = document.createTextNode("Recupero password avvenuto correttamente.Ti \u00c3\u00a8 stata inviata un'email contenente i dati richiesti.");
    _$jscoverage['LoginPanelPresenter.js'][83]++;
    message.appendChild(text);
    _$jscoverage['LoginPanelPresenter.js'][84]++;
    element.appendChild(message);
    _$jscoverage['LoginPanelPresenter.js'][85]++;
    window.setTimeout((function () {
  _$jscoverage['LoginPanelPresenter.js'][86]++;
  element.removeChild(message);
}), 2000);
}
  _$jscoverage['LoginPanelPresenter.js'][98]++;
  function incorrectAnswer() {
    _$jscoverage['LoginPanelPresenter.js'][99]++;
    var message = document.createElement("p");
    _$jscoverage['LoginPanelPresenter.js'][100]++;
    var text = document.createTextNode("Dati non corretti. Inserire nuovamente la risposta.");
    _$jscoverage['LoginPanelPresenter.js'][101]++;
    message.appendChild(text);
    _$jscoverage['LoginPanelPresenter.js'][102]++;
    element.appendChild(message);
    _$jscoverage['LoginPanelPresenter.js'][103]++;
    window.setTimeout((function () {
  _$jscoverage['LoginPanelPresenter.js'][104]++;
  element.removeChild(message);
}), 2000);
}
  _$jscoverage['LoginPanelPresenter.js'][116]++;
  function getSecretQuestion(username) {
    _$jscoverage['LoginPanelPresenter.js'][117]++;
    var question = "";
    _$jscoverage['LoginPanelPresenter.js'][118]++;
    var request = new XMLHttpRequest();
    _$jscoverage['LoginPanelPresenter.js'][119]++;
    request.open("POST", servlets[1], false);
    _$jscoverage['LoginPanelPresenter.js'][120]++;
    request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    _$jscoverage['LoginPanelPresenter.js'][121]++;
    request.send(("username=" + encodeURIComponent(username)));
    _$jscoverage['LoginPanelPresenter.js'][122]++;
    question = request.responseText;
    _$jscoverage['LoginPanelPresenter.js'][123]++;
    return question;
}
  _$jscoverage['LoginPanelPresenter.js'][139]++;
  this.hasAnsweredCorrectly = (function (username, answer) {
  _$jscoverage['LoginPanelPresenter.js'][140]++;
  var request = new XMLHttpRequest();
  _$jscoverage['LoginPanelPresenter.js'][141]++;
  request.open("POST", servlets[2], false);
  _$jscoverage['LoginPanelPresenter.js'][142]++;
  request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  _$jscoverage['LoginPanelPresenter.js'][143]++;
  request.send(("username=" + encodeURIComponent(username) + "&answer=" + encodeURIComponent(answer)));
  _$jscoverage['LoginPanelPresenter.js'][144]++;
  return JSON.parse(request.responseText);
});
  _$jscoverage['LoginPanelPresenter.js'][155]++;
  this.buildRetrievePasswordForm = (function () {
  _$jscoverage['LoginPanelPresenter.js'][157]++;
  var oldForm = document.getElementById("passwordretrieval");
  _$jscoverage['LoginPanelPresenter.js'][158]++;
  if ((oldForm != null)) {
    _$jscoverage['LoginPanelPresenter.js'][159]++;
    element.removeChild(oldForm);
  }
  _$jscoverage['LoginPanelPresenter.js'][163]++;
  var formRetrievePassword = document.createElement("fieldset");
  _$jscoverage['LoginPanelPresenter.js'][164]++;
  formRetrievePassword.id = "passwordretrieval";
  _$jscoverage['LoginPanelPresenter.js'][166]++;
  var labelQuestion = document.createElement("label");
  _$jscoverage['LoginPanelPresenter.js'][167]++;
  labelQuestion.setAttribute("for", "inputanswer");
  _$jscoverage['LoginPanelPresenter.js'][169]++;
  var name = this.getUsername();
  _$jscoverage['LoginPanelPresenter.js'][170]++;
  var text = getSecretQuestion(name);
  _$jscoverage['LoginPanelPresenter.js'][171]++;
  var question = document.createTextNode(text);
  _$jscoverage['LoginPanelPresenter.js'][172]++;
  labelQuestion.appendChild(question);
  _$jscoverage['LoginPanelPresenter.js'][174]++;
  var inputAnswer = document.createElement("input");
  _$jscoverage['LoginPanelPresenter.js'][175]++;
  inputAnswer.type = "text";
  _$jscoverage['LoginPanelPresenter.js'][176]++;
  inputAnswer.id = "inputanswer";
  _$jscoverage['LoginPanelPresenter.js'][177]++;
  inputAnswer.name = "inputanswer";
  _$jscoverage['LoginPanelPresenter.js'][178]++;
  inputAnswer.setAttribute("placeholder", "risposta");
  _$jscoverage['LoginPanelPresenter.js'][179]++;
  inputAnswer.setAttribute("required", "required");
  _$jscoverage['LoginPanelPresenter.js'][181]++;
  var submitButton = document.createElement("input");
  _$jscoverage['LoginPanelPresenter.js'][182]++;
  submitButton.setAttribute("type", "submit");
  _$jscoverage['LoginPanelPresenter.js'][183]++;
  submitButton.setAttribute("value", "OK");
  _$jscoverage['LoginPanelPresenter.js'][184]++;
  submitButton.onClick = (function () {
  _$jscoverage['LoginPanelPresenter.js'][186]++;
  if (this.hasAnsweredCorrectly(username, inputAnswer.getAttribute("value"))) {
    _$jscoverage['LoginPanelPresenter.js'][187]++;
    correctAnswer();
  }
  else {
    _$jscoverage['LoginPanelPresenter.js'][189]++;
    incorrectAnswer();
  }
});
  _$jscoverage['LoginPanelPresenter.js'][193]++;
  formRetrievePassword.appendChild(labelQuestion);
  _$jscoverage['LoginPanelPresenter.js'][194]++;
  formRetrievePassword.appendChild(inputAnswer);
  _$jscoverage['LoginPanelPresenter.js'][195]++;
  formRetrievePassword.appendChild(submitButton);
  _$jscoverage['LoginPanelPresenter.js'][196]++;
  return formRetrievePassword;
});
  _$jscoverage['LoginPanelPresenter.js'][209]++;
  this.getUsername = (function () {
  _$jscoverage['LoginPanelPresenter.js'][210]++;
  var username = document.getElementById("username").value;
  _$jscoverage['LoginPanelPresenter.js'][211]++;
  if (((! username) || (username.length == 0))) {
    _$jscoverage['LoginPanelPresenter.js'][212]++;
    throw "indirizzo email non specificato";
  }
  _$jscoverage['LoginPanelPresenter.js'][214]++;
  var emailRegex = new RegExp("^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$", "i");
  _$jscoverage['LoginPanelPresenter.js'][215]++;
  if ((! emailRegex.test(username))) {
    _$jscoverage['LoginPanelPresenter.js'][216]++;
    throw "indirizzo email non valido";
  }
  _$jscoverage['LoginPanelPresenter.js'][218]++;
  return username;
});
  _$jscoverage['LoginPanelPresenter.js'][231]++;
  this.getPassword = (function () {
  _$jscoverage['LoginPanelPresenter.js'][232]++;
  var password = document.getElementById("password").value;
  _$jscoverage['LoginPanelPresenter.js'][233]++;
  if (((! password) || (password.length == 0))) {
    _$jscoverage['LoginPanelPresenter.js'][234]++;
    throw "password non specificata";
  }
  _$jscoverage['LoginPanelPresenter.js'][236]++;
  return password;
});
  _$jscoverage['LoginPanelPresenter.js'][250]++;
  this.login = (function (data) {
  _$jscoverage['LoginPanelPresenter.js'][252]++;
  var request = new XMLHttpRequest();
  _$jscoverage['LoginPanelPresenter.js'][253]++;
  request.open("POST", servlets[0], false);
  _$jscoverage['LoginPanelPresenter.js'][254]++;
  request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  _$jscoverage['LoginPanelPresenter.js'][255]++;
  var querystring = ("username=" + encodeURIComponent(data.username) + "&password=" + encodeURIComponent(data.password));
  _$jscoverage['LoginPanelPresenter.js'][256]++;
  request.send(querystring);
  _$jscoverage['LoginPanelPresenter.js'][257]++;
  testCredentials(request.responseText);
  _$jscoverage['LoginPanelPresenter.js'][258]++;
  return querystring;
});
  _$jscoverage['LoginPanelPresenter.js'][268]++;
  this.hide = (function () {
  _$jscoverage['LoginPanelPresenter.js'][269]++;
  if (element) {
    _$jscoverage['LoginPanelPresenter.js'][270]++;
    element.style.display = "none";
  }
});
  _$jscoverage['LoginPanelPresenter.js'][283]++;
  this.initialize = (function () {
  _$jscoverage['LoginPanelPresenter.js'][284]++;
  element.innerHTML = "";
  _$jscoverage['LoginPanelPresenter.js'][285]++;
  element.style.display = "block";
  _$jscoverage['LoginPanelPresenter.js'][287]++;
  var loginForm = document.createElement("fieldset");
  _$jscoverage['LoginPanelPresenter.js'][288]++;
  loginForm.id = "loginForm";
  _$jscoverage['LoginPanelPresenter.js'][291]++;
  var divLogo = document.createElement("div");
  _$jscoverage['LoginPanelPresenter.js'][292]++;
  divLogo.id = "logo";
  _$jscoverage['LoginPanelPresenter.js'][295]++;
  var ulData = document.createElement("ul");
  _$jscoverage['LoginPanelPresenter.js'][298]++;
  var liUserName = document.createElement("li");
  _$jscoverage['LoginPanelPresenter.js'][300]++;
  var labelUserName = document.createElement("label");
  _$jscoverage['LoginPanelPresenter.js'][301]++;
  labelUserName.setAttribute("for", "username");
  _$jscoverage['LoginPanelPresenter.js'][302]++;
  labelUserName.innerHTML = "Nome utente: ";
  _$jscoverage['LoginPanelPresenter.js'][304]++;
  var inputUserName = document.createElement("input");
  _$jscoverage['LoginPanelPresenter.js'][305]++;
  inputUserName.type = "email";
  _$jscoverage['LoginPanelPresenter.js'][306]++;
  inputUserName.id = "username";
  _$jscoverage['LoginPanelPresenter.js'][307]++;
  inputUserName.name = "username";
  _$jscoverage['LoginPanelPresenter.js'][308]++;
  inputUserName.setAttribute("placeholder", "yourname@email.com");
  _$jscoverage['LoginPanelPresenter.js'][309]++;
  inputUserName.setAttribute("required", "required");
  _$jscoverage['LoginPanelPresenter.js'][311]++;
  liUserName.appendChild(labelUserName);
  _$jscoverage['LoginPanelPresenter.js'][312]++;
  liUserName.appendChild(inputUserName);
  _$jscoverage['LoginPanelPresenter.js'][315]++;
  var liPassword = document.createElement("li");
  _$jscoverage['LoginPanelPresenter.js'][317]++;
  var labelPassword = document.createElement("label");
  _$jscoverage['LoginPanelPresenter.js'][318]++;
  labelPassword.setAttribute("for", "password");
  _$jscoverage['LoginPanelPresenter.js'][319]++;
  labelPassword.innerHTML = "Password: ";
  _$jscoverage['LoginPanelPresenter.js'][321]++;
  var inputPassword = document.createElement("input");
  _$jscoverage['LoginPanelPresenter.js'][322]++;
  inputPassword.type = "password";
  _$jscoverage['LoginPanelPresenter.js'][323]++;
  inputPassword.id = "password";
  _$jscoverage['LoginPanelPresenter.js'][324]++;
  inputPassword.name = "password";
  _$jscoverage['LoginPanelPresenter.js'][325]++;
  inputPassword.setAttribute("placeholder", "password");
  _$jscoverage['LoginPanelPresenter.js'][326]++;
  inputPassword.setAttribute("required", "required");
  _$jscoverage['LoginPanelPresenter.js'][328]++;
  liPassword.appendChild(labelPassword);
  _$jscoverage['LoginPanelPresenter.js'][329]++;
  liPassword.appendChild(inputPassword);
  _$jscoverage['LoginPanelPresenter.js'][332]++;
  var inputLogin = document.createElement("button");
  _$jscoverage['LoginPanelPresenter.js'][333]++;
  inputLogin.type = "submit";
  _$jscoverage['LoginPanelPresenter.js'][334]++;
  inputLogin.appendChild(document.createTextNode("Login"));
  _$jscoverage['LoginPanelPresenter.js'][335]++;
  var self = this;
  _$jscoverage['LoginPanelPresenter.js'][336]++;
  inputLogin.onclick = (function () {
  _$jscoverage['LoginPanelPresenter.js'][337]++;
  try {
    _$jscoverage['LoginPanelPresenter.js'][338]++;
    var data = new Object();
    _$jscoverage['LoginPanelPresenter.js'][339]++;
    data.username = self.getUsername();
    _$jscoverage['LoginPanelPresenter.js'][340]++;
    data.password = self.getPassword();
    _$jscoverage['LoginPanelPresenter.js'][341]++;
    self.login(data);
  }
  catch (err) {
    _$jscoverage['LoginPanelPresenter.js'][343]++;
    alert(err);
  }
});
  _$jscoverage['LoginPanelPresenter.js'][347]++;
  var inputRegister = document.createElement("button");
  _$jscoverage['LoginPanelPresenter.js'][348]++;
  inputRegister.type = "submit";
  _$jscoverage['LoginPanelPresenter.js'][349]++;
  inputRegister.appendChild(document.createTextNode("Registrazione"));
  _$jscoverage['LoginPanelPresenter.js'][350]++;
  inputRegister.onclick = (function () {
  _$jscoverage['LoginPanelPresenter.js'][353]++;
  self.hide();
  _$jscoverage['LoginPanelPresenter.js'][354]++;
  mediator.buildRegistrationUI();
});
  _$jscoverage['LoginPanelPresenter.js'][357]++;
  var inputRetrievePassword = document.createElement("button");
  _$jscoverage['LoginPanelPresenter.js'][358]++;
  inputRetrievePassword.type = "submit";
  _$jscoverage['LoginPanelPresenter.js'][359]++;
  ;
  _$jscoverage['LoginPanelPresenter.js'][360]++;
  inputRetrievePassword.appendChild(document.createTextNode("Recupera password"));
  _$jscoverage['LoginPanelPresenter.js'][361]++;
  inputRetrievePassword.onclick = (function () {
  _$jscoverage['LoginPanelPresenter.js'][362]++;
  try {
    _$jscoverage['LoginPanelPresenter.js'][363]++;
    var form = self.buildRetrievePasswordForm();
    _$jscoverage['LoginPanelPresenter.js'][364]++;
    element.appendChild(form);
  }
  catch (err) {
    _$jscoverage['LoginPanelPresenter.js'][366]++;
    alert(err);
  }
});
  _$jscoverage['LoginPanelPresenter.js'][371]++;
  var liButtons = document.createElement("li");
  _$jscoverage['LoginPanelPresenter.js'][372]++;
  liButtons.appendChild(inputLogin);
  _$jscoverage['LoginPanelPresenter.js'][373]++;
  liButtons.appendChild(inputRegister);
  _$jscoverage['LoginPanelPresenter.js'][374]++;
  liButtons.appendChild(inputRetrievePassword);
  _$jscoverage['LoginPanelPresenter.js'][377]++;
  ulData.appendChild(liUserName);
  _$jscoverage['LoginPanelPresenter.js'][378]++;
  ulData.appendChild(liPassword);
  _$jscoverage['LoginPanelPresenter.js'][379]++;
  ulData.appendChild(liButtons);
  _$jscoverage['LoginPanelPresenter.js'][380]++;
  loginForm.appendChild(divLogo);
  _$jscoverage['LoginPanelPresenter.js'][381]++;
  loginForm.appendChild(ulData);
  _$jscoverage['LoginPanelPresenter.js'][384]++;
  element.appendChild(loginForm);
});
}
