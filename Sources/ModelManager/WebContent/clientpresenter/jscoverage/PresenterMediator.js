/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['PresenterMediator.js']) {
  _$jscoverage['PresenterMediator.js'] = [];
  _$jscoverage['PresenterMediator.js'][8] = 0;
  _$jscoverage['PresenterMediator.js'][13] = 0;
  _$jscoverage['PresenterMediator.js'][14] = 0;
  _$jscoverage['PresenterMediator.js'][15] = 0;
  _$jscoverage['PresenterMediator.js'][16] = 0;
  _$jscoverage['PresenterMediator.js'][17] = 0;
  _$jscoverage['PresenterMediator.js'][18] = 0;
  _$jscoverage['PresenterMediator.js'][21] = 0;
  _$jscoverage['PresenterMediator.js'][22] = 0;
  _$jscoverage['PresenterMediator.js'][23] = 0;
  _$jscoverage['PresenterMediator.js'][27] = 0;
  _$jscoverage['PresenterMediator.js'][28] = 0;
  _$jscoverage['PresenterMediator.js'][41] = 0;
  _$jscoverage['PresenterMediator.js'][42] = 0;
  _$jscoverage['PresenterMediator.js'][43] = 0;
  _$jscoverage['PresenterMediator.js'][44] = 0;
  _$jscoverage['PresenterMediator.js'][45] = 0;
  _$jscoverage['PresenterMediator.js'][46] = 0;
  _$jscoverage['PresenterMediator.js'][57] = 0;
  _$jscoverage['PresenterMediator.js'][58] = 0;
  _$jscoverage['PresenterMediator.js'][70] = 0;
  _$jscoverage['PresenterMediator.js'][71] = 0;
  _$jscoverage['PresenterMediator.js'][83] = 0;
  _$jscoverage['PresenterMediator.js'][84] = 0;
  _$jscoverage['PresenterMediator.js'][85] = 0;
  _$jscoverage['PresenterMediator.js'][86] = 0;
  _$jscoverage['PresenterMediator.js'][100] = 0;
  _$jscoverage['PresenterMediator.js'][102] = 0;
  _$jscoverage['PresenterMediator.js'][103] = 0;
  _$jscoverage['PresenterMediator.js'][105] = 0;
  _$jscoverage['PresenterMediator.js'][117] = 0;
  _$jscoverage['PresenterMediator.js'][119] = 0;
  _$jscoverage['PresenterMediator.js'][130] = 0;
  _$jscoverage['PresenterMediator.js'][131] = 0;
  _$jscoverage['PresenterMediator.js'][142] = 0;
  _$jscoverage['PresenterMediator.js'][143] = 0;
  _$jscoverage['PresenterMediator.js'][158] = 0;
  _$jscoverage['PresenterMediator.js'][160] = 0;
  _$jscoverage['PresenterMediator.js'][174] = 0;
  _$jscoverage['PresenterMediator.js'][176] = 0;
  _$jscoverage['PresenterMediator.js'][188] = 0;
  _$jscoverage['PresenterMediator.js'][189] = 0;
  _$jscoverage['PresenterMediator.js'][190] = 0;
  _$jscoverage['PresenterMediator.js'][192] = 0;
  _$jscoverage['PresenterMediator.js'][205] = 0;
  _$jscoverage['PresenterMediator.js'][206] = 0;
  _$jscoverage['PresenterMediator.js'][207] = 0;
  _$jscoverage['PresenterMediator.js'][209] = 0;
  _$jscoverage['PresenterMediator.js'][223] = 0;
  _$jscoverage['PresenterMediator.js'][224] = 0;
  _$jscoverage['PresenterMediator.js'][225] = 0;
  _$jscoverage['PresenterMediator.js'][236] = 0;
  _$jscoverage['PresenterMediator.js'][237] = 0;
  _$jscoverage['PresenterMediator.js'][238] = 0;
  _$jscoverage['PresenterMediator.js'][249] = 0;
  _$jscoverage['PresenterMediator.js'][250] = 0;
  _$jscoverage['PresenterMediator.js'][251] = 0;
  _$jscoverage['PresenterMediator.js'][265] = 0;
  _$jscoverage['PresenterMediator.js'][266] = 0;
  _$jscoverage['PresenterMediator.js'][280] = 0;
  _$jscoverage['PresenterMediator.js'][281] = 0;
  _$jscoverage['PresenterMediator.js'][294] = 0;
  _$jscoverage['PresenterMediator.js'][295] = 0;
  _$jscoverage['PresenterMediator.js'][308] = 0;
  _$jscoverage['PresenterMediator.js'][309] = 0;
  _$jscoverage['PresenterMediator.js'][310] = 0;
  _$jscoverage['PresenterMediator.js'][322] = 0;
  _$jscoverage['PresenterMediator.js'][323] = 0;
  _$jscoverage['PresenterMediator.js'][324] = 0;
  _$jscoverage['PresenterMediator.js'][336] = 0;
  _$jscoverage['PresenterMediator.js'][337] = 0;
  _$jscoverage['PresenterMediator.js'][338] = 0;
  _$jscoverage['PresenterMediator.js'][349] = 0;
  _$jscoverage['PresenterMediator.js'][350] = 0;
  _$jscoverage['PresenterMediator.js'][351] = 0;
  _$jscoverage['PresenterMediator.js'][361] = 0;
  _$jscoverage['PresenterMediator.js'][362] = 0;
  _$jscoverage['PresenterMediator.js'][375] = 0;
  _$jscoverage['PresenterMediator.js'][376] = 0;
  _$jscoverage['PresenterMediator.js'][377] = 0;
  _$jscoverage['PresenterMediator.js'][378] = 0;
  _$jscoverage['PresenterMediator.js'][379] = 0;
  _$jscoverage['PresenterMediator.js'][392] = 0;
  _$jscoverage['PresenterMediator.js'][393] = 0;
  _$jscoverage['PresenterMediator.js'][407] = 0;
  _$jscoverage['PresenterMediator.js'][408] = 0;
}
_$jscoverage['PresenterMediator.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * Mediatore che gestisce la collaborazione fra i vari sotto-presenter</span>","<span class=\"c\"> * </span>","<span class=\"c\"> * @constructor</span>","<span class=\"c\"> * @this {PresenterMediator}</span>","<span class=\"c\"> * @author Diego Beraldin</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> PresenterMediator<span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"c\">/***************************************************************************</span>","<span class=\"c\">\t * VARIABILI PRIVATE</span>","<span class=\"c\">\t **************************************************************************/</span>","\t<span class=\"c\">// array associativo contentente i riferimenti ai presenter di primo livello</span>","\t<span class=\"k\">var</span> presenters <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","\tpresenters<span class=\"k\">[</span><span class=\"s\">\"login\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">new</span> LoginPanelPresenter<span class=\"k\">();</span>","\tpresenters<span class=\"k\">[</span><span class=\"s\">\"register\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">new</span> RegisterPanelPresenter<span class=\"k\">();</span>","\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">new</span> AddressBookPanelPresenter<span class=\"k\">();</span>","\tpresenters<span class=\"k\">[</span><span class=\"s\">\"tools\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">new</span> ToolsPanelPresenter<span class=\"k\">();</span>","\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">new</span> MainPanelPresenter<span class=\"k\">();</span>","","\t<span class=\"c\">// presenter di secondo livello (pannelli contenuti nel MainPanel)</span>","\t<span class=\"k\">var</span> accountsettingspp <span class=\"k\">=</span> <span class=\"k\">new</span> AccountSettingsPanelPresenter<span class=\"k\">();</span>","\t<span class=\"k\">var</span> communicationpp <span class=\"k\">=</span> <span class=\"k\">new</span> CommunicationPanelPresenter<span class=\"k\">();</span>","\t<span class=\"k\">var</span> contactpp <span class=\"k\">=</span> <span class=\"k\">new</span> ContactPanelPresenter<span class=\"k\">();</span>","<span class=\"c\">//  presenter che non sono ancora utilizzati</span>","<span class=\"c\">//\tvar callhistorypp = new CallHistoryPanelPresenter();</span>","<span class=\"c\">//\tvar messagepp = new MessagePanelPresenter();</span>","\t<span class=\"k\">var</span> searchresultpp <span class=\"k\">=</span> <span class=\"k\">new</span> SearchResultPanelPresenter<span class=\"k\">();</span>","\t<span class=\"k\">var</span> grouppp <span class=\"k\">=</span> <span class=\"k\">new</span> GroupPanelPresenter<span class=\"k\">();</span>","","\t<span class=\"c\">/***************************************************************************</span>","<span class=\"c\">\t * METODI PUBBLICI</span>","<span class=\"c\">\t **************************************************************************/</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Inizializza l'interfaccia grafica delegando ai presenter il compito di</span>","<span class=\"c\">\t * disegnare gli elementi principali dell'interfaccia, incaricando i</span>","<span class=\"c\">\t * presenter di primo livello di creare e popolare i rispettivi pannelli</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>buildUI <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"register\"</span><span class=\"k\">].</span>hide<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"login\"</span><span class=\"k\">].</span>hide<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>initialize<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>initialize<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"tools\"</span><span class=\"k\">].</span>initialize<span class=\"k\">();</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Visualizza l'interfaccia di autenticazione al sistema, che comprende il</span>","<span class=\"c\">\t * form di login (a.k.a. LoginPanel), chiamando in causa il {@link</span>","<span class=\"c\">\t * LoginPanelPresenter} per la sua costruzione</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see LoginPanelPresenter#initialize()</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>buildLoginUI <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"login\"</span><span class=\"k\">].</span>initialize<span class=\"k\">();</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Visualizza il form di registrazione (a.k.a. RegisterPanel) al sistema per</span>","<span class=\"c\">\t * gli utenti che devono creare un nuovo account, demandando al {@link</span>","<span class=\"c\">\t * RegisterPanelPresenter} il compito di creare il pannello per</span>","<span class=\"c\">\t * l'inserimento dei dati di registrazione</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see RegisterPanelPresenter#initialize()</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>buildRegistrationUI <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"register\"</span><span class=\"k\">].</span>initialize<span class=\"k\">();</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione da scatenare nel momento in cui &#195;&#168; selezionato un contatto, ne</span>","<span class=\"c\">\t * provoca la visualizzazione nel pannello dei contatti</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see ContactPanelPresenter#display()</span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            contact contatto che deve essere visualizzato</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onContactSelected <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> contactpp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t\tcontactpp<span class=\"k\">.</span>display<span class=\"k\">(</span>contact<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata dai pulsanti di SearchResultPanel che</span>","<span class=\"c\">\t * comunica all'AddressBookPanelPresenter di aggiungere un contatto</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see AddressBookPanelPresenter#addContact({Number})</span>","<span class=\"c\">\t * @param {Number}</span>","<span class=\"c\">\t *            userID id dell'utente che deve essere aggiunto alla rubrica</span>","<span class=\"c\">\t * @return {Boolean} true se l'aggiunta &#195;&#168; avvenuta con successo</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onContactAdded <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>userID<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// FIXME correggere passando il contatto e non l'id di esso</span>","\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> presenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>addContact<span class=\"k\">(</span>userID<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\talert<span class=\"k\">(</span>err<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata dai pulsanti di SearchResultPanel che</span>","<span class=\"c\">\t * comunica all'AddressBookPanelPresenter di rimuovere un contatto</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Number}</span>","<span class=\"c\">\t *            userID rappresenta l'id del contato da rimuovere</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onContactRemoved <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>userID<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// FIXME correggere passando il contatto e non l'id di esso</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>removeContact<span class=\"k\">(</span>userID<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata dai pulsanti di SearchResultPanel che</span>","<span class=\"c\">\t * comunica all'AddressBookPanelPresenter di aggiungere un gruppo</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {String}</span>","<span class=\"c\">\t *            name rappresenta il nome del gruppo da aggiungere</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onGroupAdded <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>addGroup<span class=\"k\">(</span>name<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback che comunica all'AddressBookPanelPresenter di</span>","<span class=\"c\">\t * rimuovere un gruppo</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Number}</span>","<span class=\"c\">\t *            group rappresenta il gruppo da rimuovere</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onGroupRemoved <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>group<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>removeGroup<span class=\"k\">(</span>group<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata dai pulsanti di SearchResultPanel che</span>","<span class=\"c\">\t * comunica all'AddressBookPanelPresenter di aggiungere un contatto in un</span>","<span class=\"c\">\t * gruppo</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Number}</span>","<span class=\"c\">\t *            contact rappresenta l'id del contato da aggiungere</span>","<span class=\"c\">\t * @param {Number}</span>","<span class=\"c\">\t *            group rappresenta l'id del gruppo in cui aggiungere il</span>","<span class=\"c\">\t *            contatto</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onContactAddeddInGroup <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">,</span> group<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// FIXME correggere passando il contatto e non l'id di esso</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>addContactInGroup<span class=\"k\">(</span>contact<span class=\"k\">,</span> group<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata dai pulsanti di SearchResultPanel che</span>","<span class=\"c\">\t * comunica all'AddressBookPanelPresenter di rimuovere un contatto da un</span>","<span class=\"c\">\t * gruppo</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Number}</span>","<span class=\"c\">\t *            contact rappresenta l'id del contato da rimuovere</span>","<span class=\"c\">\t * @param {Number}</span>","<span class=\"c\">\t *            group rappresenta l'id del gruppo da cui rimuovere il contatto</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onContactRemovedFromGroup <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">,</span> group<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// FIXME correggere passando il contatto e non l'id di esso</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>removeContactFromGroup<span class=\"k\">(</span>contact<span class=\"k\">,</span> group<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata per eseguire l'operazione che comunica</span>","<span class=\"c\">\t * all'AddressBookPanelPresenter il blocco di un utente</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            contact reppresenta il contatto da bloccare</span>","<span class=\"c\">\t * @return {Boolean} true solo se il contatto &#195;&#168; stato bloccato con successo</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onBlockContact <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> presenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>blockUser<span class=\"k\">(</span>contact<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\talert<span class=\"k\">(</span>err<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata per eseguire l'operazione che comunica</span>","<span class=\"c\">\t * all'AddressBookPanelPresenter lo sblocco di un utente</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            contact reppresenta il contatto da bloccare</span>","<span class=\"c\">\t * @return {Boolean} true solo se il contatto &#195;&#168; stato sbloccato con successo</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onUnlockContact <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> presenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>unlockUser<span class=\"k\">(</span>contact<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\talert<span class=\"k\">(</span>err<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Provoca la creazione del pannello della segreteria e la sua</span>","<span class=\"c\">\t * visualizzazione all'interno del MainPanel come elemento figlio. La</span>","<span class=\"c\">\t * costruzione del pannello &#195;&#168; affidata al metodo createPanel che viene reso</span>","<span class=\"c\">\t * disponibile da tutti i presenter di secondo livello</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see MainPanel#displayChildPanel({HTMLDivElement})</span>","<span class=\"c\">\t * @see MessagePanelPresenter#createPanel()</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>displayMessagePanel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> messagepp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Provoca la creazione del pannello delle impostazioni dell'utente e la sua</span>","<span class=\"c\">\t * visualizzazione all'interno del MainPanel.</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see MainPanel#displayChildPanel({HTMLDivElement})</span>","<span class=\"c\">\t * @see AccountSettingsPanelPresenter#createPanel({HTMLDivElement})</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>displayAccountSettingsPanel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> callhistorypp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Provoca la creazione del pannello dello storico delle chiamate e la sua</span>","<span class=\"c\">\t * visualizzazione all'interno del MainPanel.</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see MainPanel#displayChildPanel({HTMLDivElement})</span>","<span class=\"c\">\t * @see AccountSettingsPanelPresenter#createPanel({HTMLDivElement})</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>displayCallHistoryPanel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> callhistorypp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata dai pulsanti di SearchResultPanel che</span>","<span class=\"c\">\t * comunica all'AddressBookPanelPresenter di filtrare la lista dei contatti</span>","<span class=\"c\">\t * secondo un parametro</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {String}</span>","<span class=\"c\">\t *            contact rappresenta l'id del contato da rimuovere</span>","<span class=\"c\">\t */</span>","\t<span class=\"c\">// FIXME non so se serve questa funzione dato che l'applicazione dei filtri</span>","\t<span class=\"c\">// avviene tra AddressBookPP e se stesso</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onFiltredApplyedByParam <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>param<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>applyFilterByString<span class=\"k\">(</span>param<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione di callback richiamata dai pulsanti di SearchResultPanel che</span>","<span class=\"c\">\t * comunica all'AddressBookPanelPresenter di filtrare la lista dei contatti</span>","<span class=\"c\">\t * appartenenti al gruppo passato</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {String}</span>","<span class=\"c\">\t *            contact rappresenta l'id del contato da rimuovere</span>","<span class=\"c\">\t */</span>","\t<span class=\"c\">// FIXME non so se serve questa funzione dato che l'applicazione dei filtri</span>","\t<span class=\"c\">// avviene tra AddressBookPP e se stesso</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onFiltredApplyedByGroup <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>group<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>applyFilterByGroup<span class=\"k\">(</span>group<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione richiamata che comunica all'AddressBookPanelPresenter di cercare</span>","<span class=\"c\">\t * i gruppi a cui appartiene un utente nella propria rubrica</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            contact contatto di cui ricercare i gruppi in cui &#195;&#168; inserito</span>","<span class=\"c\">\t * @return {Object} array associativo che presenta la lista dei gruppi in</span>","<span class=\"c\">\t *         cui &#195;&#168; presente il contatto</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>getGroupsWhereContactsIs <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> presenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>getGroupsWhereContactsIs<span class=\"k\">(</span>contact<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Provoca la visualizzazione del pannello per i risultati di una ricerca</span>","<span class=\"c\">\t * fra gli utenti del sistema (a.k.a. SearchResultPanel) nel pannello</span>","<span class=\"c\">\t * principale delegando a quest'ultimo tramite {@link MainPanelPresenter} la</span>","<span class=\"c\">\t * visualizzazione</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see SearchResultPanelPresenter#createPanel()</span>","<span class=\"c\">\t * @see MainPanelPresenter#displayChildPanel({HTMLDivElement}</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>displaySearchResultPanel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> searchresultpp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Provoca la visualizzazione del pannello delle impostazioni del proprio</span>","<span class=\"c\">\t * account (a.k.a. AccountSettingsPanel) nel pannello principale delegando a</span>","<span class=\"c\">\t * quest'ultimo tramite {@link MainPanelPresenter} la sua visualizzazione</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see AccountSettingsPanelPresenter#createPanel()</span>","<span class=\"c\">\t * @see MainPanelPresenter#displayChildPanel({HTMLDivElement})</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>displayAccountSettingsPanel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> accountsettingspp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenter<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Provoca la visualizzazione del pannello delle comunicazioni (a.k.a.</span>","<span class=\"c\">\t * CommunicationPanel) nel pannello principale delegando a quest'ultimo</span>","<span class=\"c\">\t * tramite {@link MainPanelPresenter} la sua visualizzazione</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see CommunicationPanelPresenter#createPanel()</span>","<span class=\"c\">\t * @see MainPanelPresenter#displayChildPanel({HTMLDivElement})</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>displayCommunicationPanel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> communicationpp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenter<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Provoca la visualizzazione della scheda di un contatto nel</span>","<span class=\"c\">\t * ComunicationPanelPresenter</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            contact il contatto da visualizzare</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>displayContact <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>displayCommunicationPanel<span class=\"k\">();</span>","\t\tcontactpp<span class=\"k\">.</span>display<span class=\"k\">(</span>contact<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Controllo se un utente &#195;&#168; rpesente nella rubrica</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            contact il contatto da controllare</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>contactAlreadyPresent <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> presenters<span class=\"k\">[</span><span class=\"s\">\"addressbook\"</span><span class=\"k\">].</span>contactAlreadyPresent<span class=\"k\">(</span>contact<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Codice da eseguire per coordinare i presenter nel momento in cui ha</span>","<span class=\"c\">\t * inizio una nuova comunicazione testuale, incapsula la collaborazione fra</span>","<span class=\"c\">\t * {@link ContactPanelPresenter} e {@link CommunicationPanelPresenter}</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @see CommunicationPanelPresenter#addChat(user)</span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            user utente con cui si vuole avviare la chat</span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onChatStarted <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> communicationpp<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\tpresenters<span class=\"k\">[</span><span class=\"s\">\"main\"</span><span class=\"k\">].</span>displayChildPanel<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t\tcommunicationpp<span class=\"k\">.</span>addChat<span class=\"k\">(</span>user<span class=\"k\">);</span>","\t\tcommunicationpp<span class=\"k\">.</span>displayChat<span class=\"k\">(</span>user<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione per effettuare la vera e propria chiamata con un contatto</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @param {Object}</span>","<span class=\"c\">\t *            contact il contatto da chiamare</span>","<span class=\"c\">\t * @param {Boolean}</span>","<span class=\"c\">\t *            onlyAudio true se si vuole effettuare una chiamata solo audio</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>onCall <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>contact<span class=\"k\">,</span> onlyAudio<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>onlyAudio<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// TODO chiamare con function(contact, false)</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">// TODO chiamare con functuon(contact, true)</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Funzione per ottenere il ComunicationPanelPresenter</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @author Diego Beraldin</span>","<span class=\"c\">\t * @author Riccardo Tresoldi</span>","<span class=\"c\">\t * </span>","<span class=\"c\">\t * @return {Object} ritorna il comunicationPP</span>","<span class=\"c\">\t */</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>getCommunicationPP <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> communicationpp<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>"];
_$jscoverage['PresenterMediator.js'][8]++;
function PresenterMediator() {
  _$jscoverage['PresenterMediator.js'][13]++;
  var presenters = new Array();
  _$jscoverage['PresenterMediator.js'][14]++;
  presenters.login = new LoginPanelPresenter();
  _$jscoverage['PresenterMediator.js'][15]++;
  presenters.register = new RegisterPanelPresenter();
  _$jscoverage['PresenterMediator.js'][16]++;
  presenters.addressbook = new AddressBookPanelPresenter();
  _$jscoverage['PresenterMediator.js'][17]++;
  presenters.tools = new ToolsPanelPresenter();
  _$jscoverage['PresenterMediator.js'][18]++;
  presenters.main = new MainPanelPresenter();
  _$jscoverage['PresenterMediator.js'][21]++;
  var accountsettingspp = new AccountSettingsPanelPresenter();
  _$jscoverage['PresenterMediator.js'][22]++;
  var communicationpp = new CommunicationPanelPresenter();
  _$jscoverage['PresenterMediator.js'][23]++;
  var contactpp = new ContactPanelPresenter();
  _$jscoverage['PresenterMediator.js'][27]++;
  var searchresultpp = new SearchResultPanelPresenter();
  _$jscoverage['PresenterMediator.js'][28]++;
  var grouppp = new GroupPanelPresenter();
  _$jscoverage['PresenterMediator.js'][41]++;
  this.buildUI = (function () {
  _$jscoverage['PresenterMediator.js'][42]++;
  presenters.register.hide();
  _$jscoverage['PresenterMediator.js'][43]++;
  presenters.login.hide();
  _$jscoverage['PresenterMediator.js'][44]++;
  presenters.addressbook.initialize();
  _$jscoverage['PresenterMediator.js'][45]++;
  presenters.main.initialize();
  _$jscoverage['PresenterMediator.js'][46]++;
  presenters.tools.initialize();
});
  _$jscoverage['PresenterMediator.js'][57]++;
  this.buildLoginUI = (function () {
  _$jscoverage['PresenterMediator.js'][58]++;
  presenters.login.initialize();
});
  _$jscoverage['PresenterMediator.js'][70]++;
  this.buildRegistrationUI = (function () {
  _$jscoverage['PresenterMediator.js'][71]++;
  presenters.register.initialize();
});
  _$jscoverage['PresenterMediator.js'][83]++;
  this.onContactSelected = (function (contact) {
  _$jscoverage['PresenterMediator.js'][84]++;
  var element = contactpp.createPanel();
  _$jscoverage['PresenterMediator.js'][85]++;
  presenters.main.displayChildPanel(element);
  _$jscoverage['PresenterMediator.js'][86]++;
  contactpp.display(contact);
});
  _$jscoverage['PresenterMediator.js'][100]++;
  this.onContactAdded = (function (userID) {
  _$jscoverage['PresenterMediator.js'][102]++;
  try {
    _$jscoverage['PresenterMediator.js'][103]++;
    return presenters.addressbook.addContact(userID);
  }
  catch (err) {
    _$jscoverage['PresenterMediator.js'][105]++;
    alert(err);
  }
});
  _$jscoverage['PresenterMediator.js'][117]++;
  this.onContactRemoved = (function (userID) {
  _$jscoverage['PresenterMediator.js'][119]++;
  presenters.addressbook.removeContact(userID);
});
  _$jscoverage['PresenterMediator.js'][130]++;
  this.onGroupAdded = (function (name) {
  _$jscoverage['PresenterMediator.js'][131]++;
  presenters.addressbook.addGroup(name);
});
  _$jscoverage['PresenterMediator.js'][142]++;
  this.onGroupRemoved = (function (group) {
  _$jscoverage['PresenterMediator.js'][143]++;
  presenters.addressbook.removeGroup(group);
});
  _$jscoverage['PresenterMediator.js'][158]++;
  this.onContactAddeddInGroup = (function (contact, group) {
  _$jscoverage['PresenterMediator.js'][160]++;
  presenters.addressbook.addContactInGroup(contact, group);
});
  _$jscoverage['PresenterMediator.js'][174]++;
  this.onContactRemovedFromGroup = (function (contact, group) {
  _$jscoverage['PresenterMediator.js'][176]++;
  presenters.addressbook.removeContactFromGroup(contact, group);
});
  _$jscoverage['PresenterMediator.js'][188]++;
  this.onBlockContact = (function (contact) {
  _$jscoverage['PresenterMediator.js'][189]++;
  try {
    _$jscoverage['PresenterMediator.js'][190]++;
    return presenters.addressbook.blockUser(contact);
  }
  catch (err) {
    _$jscoverage['PresenterMediator.js'][192]++;
    alert(err);
  }
});
  _$jscoverage['PresenterMediator.js'][205]++;
  this.onUnlockContact = (function (contact) {
  _$jscoverage['PresenterMediator.js'][206]++;
  try {
    _$jscoverage['PresenterMediator.js'][207]++;
    return presenters.addressbook.unlockUser(contact);
  }
  catch (err) {
    _$jscoverage['PresenterMediator.js'][209]++;
    alert(err);
  }
});
  _$jscoverage['PresenterMediator.js'][223]++;
  this.displayMessagePanel = (function () {
  _$jscoverage['PresenterMediator.js'][224]++;
  var element = messagepp.createPanel();
  _$jscoverage['PresenterMediator.js'][225]++;
  presenters.main.displayChildPanel(element);
});
  _$jscoverage['PresenterMediator.js'][236]++;
  this.displayAccountSettingsPanel = (function () {
  _$jscoverage['PresenterMediator.js'][237]++;
  var element = callhistorypp.createPanel();
  _$jscoverage['PresenterMediator.js'][238]++;
  presenters.main.displayChildPanel(element);
});
  _$jscoverage['PresenterMediator.js'][249]++;
  this.displayCallHistoryPanel = (function () {
  _$jscoverage['PresenterMediator.js'][250]++;
  var element = callhistorypp.createPanel();
  _$jscoverage['PresenterMediator.js'][251]++;
  presenters.main.displayChildPanel(element);
});
  _$jscoverage['PresenterMediator.js'][265]++;
  this.onFiltredApplyedByParam = (function (param) {
  _$jscoverage['PresenterMediator.js'][266]++;
  presenters.addressbook.applyFilterByString(param);
});
  _$jscoverage['PresenterMediator.js'][280]++;
  this.onFiltredApplyedByGroup = (function (group) {
  _$jscoverage['PresenterMediator.js'][281]++;
  presenters.addressbook.applyFilterByGroup(group);
});
  _$jscoverage['PresenterMediator.js'][294]++;
  this.getGroupsWhereContactsIs = (function (contact) {
  _$jscoverage['PresenterMediator.js'][295]++;
  return presenters.addressbook.getGroupsWhereContactsIs(contact);
});
  _$jscoverage['PresenterMediator.js'][308]++;
  this.displaySearchResultPanel = (function () {
  _$jscoverage['PresenterMediator.js'][309]++;
  var element = searchresultpp.createPanel();
  _$jscoverage['PresenterMediator.js'][310]++;
  presenters.main.displayChildPanel(element);
});
  _$jscoverage['PresenterMediator.js'][322]++;
  this.displayAccountSettingsPanel = (function () {
  _$jscoverage['PresenterMediator.js'][323]++;
  var element = accountsettingspp.createPanel();
  _$jscoverage['PresenterMediator.js'][324]++;
  presenter.main.displayChildPanel(element);
});
  _$jscoverage['PresenterMediator.js'][336]++;
  this.displayCommunicationPanel = (function () {
  _$jscoverage['PresenterMediator.js'][337]++;
  var element = communicationpp.createPanel();
  _$jscoverage['PresenterMediator.js'][338]++;
  presenter.main.displayChildPanel(element);
});
  _$jscoverage['PresenterMediator.js'][349]++;
  this.displayContact = (function (contact) {
  _$jscoverage['PresenterMediator.js'][350]++;
  this.displayCommunicationPanel();
  _$jscoverage['PresenterMediator.js'][351]++;
  contactpp.display(contact);
});
  _$jscoverage['PresenterMediator.js'][361]++;
  this.contactAlreadyPresent = (function (contact) {
  _$jscoverage['PresenterMediator.js'][362]++;
  return presenters.addressbook.contactAlreadyPresent(contact);
});
  _$jscoverage['PresenterMediator.js'][375]++;
  this.onChatStarted = (function (user) {
  _$jscoverage['PresenterMediator.js'][376]++;
  var element = communicationpp.createPanel();
  _$jscoverage['PresenterMediator.js'][377]++;
  presenters.main.displayChildPanel(element);
  _$jscoverage['PresenterMediator.js'][378]++;
  communicationpp.addChat(user);
  _$jscoverage['PresenterMediator.js'][379]++;
  communicationpp.displayChat(user);
});
  _$jscoverage['PresenterMediator.js'][392]++;
  this.onCall = (function (contact, onlyAudio) {
  _$jscoverage['PresenterMediator.js'][393]++;
  if (onlyAudio) {
  }
  else {
  }
});
  _$jscoverage['PresenterMediator.js'][407]++;
  this.getCommunicationPP = (function () {
  _$jscoverage['PresenterMediator.js'][408]++;
  return communicationpp;
});
}
