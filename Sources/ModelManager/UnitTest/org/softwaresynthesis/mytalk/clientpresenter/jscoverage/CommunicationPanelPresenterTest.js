/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['CommunicationPanelPresenterTest.js']) {
  _$jscoverage['CommunicationPanelPresenterTest.js'] = [];
  _$jscoverage['CommunicationPanelPresenterTest.js'][1] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][3] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][4] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][10] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][13] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][14] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][15] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][17] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][19] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][21] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][22] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][24] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][26] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][28] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][30] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][32] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][33] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][35] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][36] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][38] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][40] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][42] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][44] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][45] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][46] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][47] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][49] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][51] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][52] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][54] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][55] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][57] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][58] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][60] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][61] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][63] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][64] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][66] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][68] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][70] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][71] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][73] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][75] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][76] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][77] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][79] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][80] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][81] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][83] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][84] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][85] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][87] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][88] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][90] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][91] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][92] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][93] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][94] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][95] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][96] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][97] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][99] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][100] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][101] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][103] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][104] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][106] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][107] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][108] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][109] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][110] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][111] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][112] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][113] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][115] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][116] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][117] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][119] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][120] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][121] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][122] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][123] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][125] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][126] = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][127] = 0;
}
_$jscoverage['CommunicationPanelPresenterTest.js'].source = ["module<span class=\"k\">(</span><span class=\"s\">\"CommunicationPanelPresenter\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","\tsetup <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\tcommunicationcenter <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","\t\ttester <span class=\"k\">=</span> <span class=\"k\">new</span> CommunicationPanelPresenter<span class=\"k\">();</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tteardown <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span>","\t\t<span class=\"s\">\"testCreatePanel()\"</span><span class=\"k\">,</span>","\t\t<span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> tester<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\t\t<span class=\"k\">var</span> list <span class=\"k\">=</span> element<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il numero di figli dell'elemento restituito e' 2\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> divCall <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t\t<span class=\"k\">var</span> divChat <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","\t\t\tequal<span class=\"k\">(</span>divCall<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>divChat<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il secondo figlio dell'elemenento e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>divCall<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"divCall\"</span><span class=\"k\">,</span> <span class=\"s\">\"l'id del div e' divCall\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>divChat<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"divChat\"</span><span class=\"k\">,</span> <span class=\"s\">\"l'd del div e' divChat\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tlist <span class=\"k\">=</span> divCall<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">4</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"la lista dei figli di divCall contiene 4 figli\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> myVideo <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t\t<span class=\"k\">var</span> otherVideo <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","\t\t\t<span class=\"k\">var</span> statDiv <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">];</span>","\t\t\t<span class=\"k\">var</span> close <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">];</span>","","\t\t\tequal<span class=\"k\">(</span>myVideo<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"VIDEO\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"tipo dell'elemento &lt;video&gt; corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>otherVideo<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"VIDEO\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"tipo dell'elemento &lt;video&gt; corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>myVideo<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"myVideo\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"attributo id del primo video corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>myVideo<span class=\"k\">.</span>autoplay<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"attributo autoplay del primo video corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>otherVideo<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"otherVideo\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"attributo id del secondo video corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>otherVideo<span class=\"k\">.</span>autoplay<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"attributo autoplay del secondo video corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>statDiv<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"tipo dell'elemento &lt;div&gt; delle statistiche corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>statDiv<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"statDiv\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"attributo id delle statistiche impostato correttamente\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>close<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"BUTTON\"</span><span class=\"k\">,</span> <span class=\"s\">\"tipo del pulsante corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>close<span class=\"k\">.</span>type<span class=\"k\">,</span> <span class=\"s\">\"button\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"attributo type del pulsante impostato correttamente\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>close<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"closeButton\"</span><span class=\"k\">,</span> <span class=\"s\">\"attributo id del pulsante corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tlist <span class=\"k\">=</span> statDiv<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"il div delle statistiche ha due figli\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> statSpan <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t\t<span class=\"k\">var</span> timerSpan <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","\t\t\tequal<span class=\"k\">(</span>statSpan<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SPAN\"</span><span class=\"k\">,</span> <span class=\"s\">\"tipo corretto dello span\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>timerSpan<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SPAN\"</span><span class=\"k\">,</span> <span class=\"s\">\"tipo corretto dello span\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>statSpan<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"statSpan\"</span><span class=\"k\">,</span> <span class=\"s\">\"id corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>timerSpan<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"timerSpan\"</span><span class=\"k\">,</span> <span class=\"s\">\"id corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tlist <span class=\"k\">=</span> statSpan<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"statSpan ha esattamente due figli\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> statReceived <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t\t<span class=\"k\">var</span> statSent <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","\t\t\tequal<span class=\"k\">(</span>statReceived<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SPAN\"</span><span class=\"k\">,</span> <span class=\"s\">\"tipo corretto dello span\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>statReceived<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"statReceved\"</span><span class=\"k\">,</span> <span class=\"s\">\"id corretto dello span\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>statSent<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SPAN\"</span><span class=\"k\">,</span> <span class=\"s\">\"tipo corretto dello span\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>statSent<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"statSend\"</span><span class=\"k\">,</span> <span class=\"s\">\"id corretto dello span\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tlist <span class=\"k\">=</span> divChat<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"l'elemento divChat ha un figlio\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> ulOpenChat <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t\tequal<span class=\"k\">(</span>ulOpenChat<span class=\"k\">.</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"UL\"</span><span class=\"k\">,</span> <span class=\"s\">\"tipo dell'elemento lista corretto\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>ulOpenChat<span class=\"k\">.</span>id<span class=\"k\">,</span> <span class=\"s\">\"ulOpenChat\"</span><span class=\"k\">,</span> <span class=\"s\">\"attributo id della lista impostato correttamente\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\t","\t\t\tequal<span class=\"k\">(</span>ulOpenChat<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">\"al momento della creazione la lista non ha figli\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['CommunicationPanelPresenterTest.js'][1]++;
module("CommunicationPanelPresenter", {setup: (function () {
  _$jscoverage['CommunicationPanelPresenterTest.js'][3]++;
  communicationcenter = new Object();
  _$jscoverage['CommunicationPanelPresenterTest.js'][4]++;
  tester = new CommunicationPanelPresenter();
}), teardown: (function () {
})});
_$jscoverage['CommunicationPanelPresenterTest.js'][10]++;
test("testCreatePanel()", (function () {
  _$jscoverage['CommunicationPanelPresenterTest.js'][13]++;
  var i = 0;
  _$jscoverage['CommunicationPanelPresenterTest.js'][14]++;
  var element = tester.createPanel();
  _$jscoverage['CommunicationPanelPresenterTest.js'][15]++;
  var list = element.childNodes;
  _$jscoverage['CommunicationPanelPresenterTest.js'][17]++;
  equal(list.length, 2, "il numero di figli dell'elemento restituito e' 2");
  _$jscoverage['CommunicationPanelPresenterTest.js'][19]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][21]++;
  var divCall = list[0];
  _$jscoverage['CommunicationPanelPresenterTest.js'][22]++;
  var divChat = list[1];
  _$jscoverage['CommunicationPanelPresenterTest.js'][24]++;
  equal(divCall.nodeName, "DIV", "il primo figlio dell'elemento e' un div");
  _$jscoverage['CommunicationPanelPresenterTest.js'][26]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][28]++;
  equal(divChat.nodeName, "DIV", "il secondo figlio dell'elemenento e' un div");
  _$jscoverage['CommunicationPanelPresenterTest.js'][30]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][32]++;
  equal(divCall.id, "divCall", "l'id del div e' divCall");
  _$jscoverage['CommunicationPanelPresenterTest.js'][33]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][35]++;
  equal(divChat.id, "divChat", "l'd del div e' divChat");
  _$jscoverage['CommunicationPanelPresenterTest.js'][36]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][38]++;
  list = divCall.childNodes;
  _$jscoverage['CommunicationPanelPresenterTest.js'][40]++;
  equal(list.length, 4, "la lista dei figli di divCall contiene 4 figli");
  _$jscoverage['CommunicationPanelPresenterTest.js'][42]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][44]++;
  var myVideo = list[0];
  _$jscoverage['CommunicationPanelPresenterTest.js'][45]++;
  var otherVideo = list[1];
  _$jscoverage['CommunicationPanelPresenterTest.js'][46]++;
  var statDiv = list[2];
  _$jscoverage['CommunicationPanelPresenterTest.js'][47]++;
  var close = list[3];
  _$jscoverage['CommunicationPanelPresenterTest.js'][49]++;
  equal(myVideo.nodeName, "VIDEO", "tipo dell'elemento <video> corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][51]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][52]++;
  equal(otherVideo.nodeName, "VIDEO", "tipo dell'elemento <video> corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][54]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][55]++;
  equal(myVideo.id, "myVideo", "attributo id del primo video corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][57]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][58]++;
  equal(myVideo.autoplay, true, "attributo autoplay del primo video corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][60]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][61]++;
  equal(otherVideo.id, "otherVideo", "attributo id del secondo video corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][63]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][64]++;
  equal(otherVideo.autoplay, true, "attributo autoplay del secondo video corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][66]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][68]++;
  equal(statDiv.nodeName, "DIV", "tipo dell'elemento <div> delle statistiche corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][70]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][71]++;
  equal(statDiv.id, "statDiv", "attributo id delle statistiche impostato correttamente");
  _$jscoverage['CommunicationPanelPresenterTest.js'][73]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][75]++;
  equal(close.nodeName, "BUTTON", "tipo del pulsante corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][76]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][77]++;
  equal(close.type, "button", "attributo type del pulsante impostato correttamente");
  _$jscoverage['CommunicationPanelPresenterTest.js'][79]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][80]++;
  equal(close.id, "closeButton", "attributo id del pulsante corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][81]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][83]++;
  list = statDiv.childNodes;
  _$jscoverage['CommunicationPanelPresenterTest.js'][84]++;
  equal(list.length, 2, "il div delle statistiche ha due figli");
  _$jscoverage['CommunicationPanelPresenterTest.js'][85]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][87]++;
  var statSpan = list[0];
  _$jscoverage['CommunicationPanelPresenterTest.js'][88]++;
  var timerSpan = list[1];
  _$jscoverage['CommunicationPanelPresenterTest.js'][90]++;
  equal(statSpan.nodeName, "SPAN", "tipo corretto dello span");
  _$jscoverage['CommunicationPanelPresenterTest.js'][91]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][92]++;
  equal(timerSpan.nodeName, "SPAN", "tipo corretto dello span");
  _$jscoverage['CommunicationPanelPresenterTest.js'][93]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][94]++;
  equal(statSpan.id, "statSpan", "id corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][95]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][96]++;
  equal(timerSpan.id, "timerSpan", "id corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][97]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][99]++;
  list = statSpan.childNodes;
  _$jscoverage['CommunicationPanelPresenterTest.js'][100]++;
  equal(list.length, 2, "statSpan ha esattamente due figli");
  _$jscoverage['CommunicationPanelPresenterTest.js'][101]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][103]++;
  var statReceived = list[0];
  _$jscoverage['CommunicationPanelPresenterTest.js'][104]++;
  var statSent = list[1];
  _$jscoverage['CommunicationPanelPresenterTest.js'][106]++;
  equal(statReceived.nodeName, "SPAN", "tipo corretto dello span");
  _$jscoverage['CommunicationPanelPresenterTest.js'][107]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][108]++;
  equal(statReceived.id, "statReceved", "id corretto dello span");
  _$jscoverage['CommunicationPanelPresenterTest.js'][109]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][110]++;
  equal(statSent.nodeName, "SPAN", "tipo corretto dello span");
  _$jscoverage['CommunicationPanelPresenterTest.js'][111]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][112]++;
  equal(statSent.id, "statSend", "id corretto dello span");
  _$jscoverage['CommunicationPanelPresenterTest.js'][113]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][115]++;
  list = divChat.childNodes;
  _$jscoverage['CommunicationPanelPresenterTest.js'][116]++;
  equal(list.length, 1, "l'elemento divChat ha un figlio");
  _$jscoverage['CommunicationPanelPresenterTest.js'][117]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][119]++;
  var ulOpenChat = list[0];
  _$jscoverage['CommunicationPanelPresenterTest.js'][120]++;
  equal(ulOpenChat.nodeName, "UL", "tipo dell'elemento lista corretto");
  _$jscoverage['CommunicationPanelPresenterTest.js'][121]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][122]++;
  equal(ulOpenChat.id, "ulOpenChat", "attributo id della lista impostato correttamente");
  _$jscoverage['CommunicationPanelPresenterTest.js'][123]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][125]++;
  equal(ulOpenChat.childNodes.length, 0, "al momento della creazione la lista non ha figli");
  _$jscoverage['CommunicationPanelPresenterTest.js'][126]++;
  (i++);
  _$jscoverage['CommunicationPanelPresenterTest.js'][127]++;
  expect(i);
}));
