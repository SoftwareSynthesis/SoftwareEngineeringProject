/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['AddressBookPanelPresenterTest.js']) {
  _$jscoverage['AddressBookPanelPresenterTest.js'] = [];
  _$jscoverage['AddressBookPanelPresenterTest.js'][1] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][6] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][7] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][8] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][9] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][11] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][12] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][13] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][15] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][16] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][17] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][19] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][21] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][23] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][24] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][33] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][34] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][42] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][44] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][45] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][46] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][51] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][52] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][53] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][54] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][55] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][57] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][59] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][61] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][62] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][64] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][72] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][75] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][76] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][78] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][79] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][80] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][82] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][84] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][85] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][87] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][88] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][89] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][90] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][91] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][92] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][93] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][94] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][96] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][98] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][99] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][101] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][102] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][104] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][105] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][107] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][109] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][110] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][111] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][113] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][115] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][116] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][118] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][120] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][122] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][123] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][125] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][127] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][128] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][129] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][130] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][131] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][132] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][134] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][136] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][137] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][138] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][139] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][140] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][142] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][143] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][144] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][145] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][147] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][148] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][150] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][152] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][155] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][156] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][157] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][158] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][160] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][161] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][163] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][165] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][167] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][169] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][170] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][172] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][174] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][176] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][178] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][180] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][182] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][184] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][186] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][188] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][189] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][191] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][193] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][195] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][197] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][198] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][200] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][202] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][204] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][206] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][208] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][210] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][212] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][214] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][216] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][217] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][219] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][221] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][223] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][226] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][227] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][228] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][229] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][233] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][237] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][252] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][261] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][262] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][264] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][265] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][266] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][267] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][268] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][270] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][272] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][275] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][277] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][279] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][282] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][283] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][298] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][299] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][300] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][301] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][303] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][313] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][314] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][315] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][316] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][318] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][320] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][323] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][325] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][326] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][328] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][330] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][333] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][337] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][350] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][354] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][355] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][356] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][357] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][358] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][359] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][363] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][364] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][365] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][366] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][367] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][368] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][369] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][370] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][374] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][375] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][376] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][378] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][379] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][381] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][384] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][385] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][386] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][387] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][389] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][392] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][394] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][396] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][397] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][404] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][406] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][407] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][408] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][409] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][411] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][413] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][416] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][419] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][420] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][421] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][442] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][443] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][444] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][446] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][447] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][448] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][449] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][451] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][453] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][456] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][457] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][458] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][461] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][462] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][463] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][464] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][473] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][494] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][495] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][496] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][498] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][499] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][500] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][501] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][503] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][505] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][508] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][509] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][511] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][514] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][516] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][546] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][547] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][549] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][557] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][558] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][559] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][565] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][570] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][571] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][573] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][575] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][578] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][579] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][580] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][587] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][594] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][595] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][596] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][597] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][599] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][601] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][602] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][605] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][606] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][607] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][615] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][622] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][623] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][624] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][625] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][627] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][628] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][630] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][631] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][635] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][636] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][637] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][644] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][645] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][646] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][647] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][648] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][652] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][653] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][654] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][662] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][674] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][675] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][676] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][677] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][678] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][679] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][680] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][682] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][685] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][686] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][688] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][700] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][701] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][702] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][703] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][705] = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][706] = 0;
}
_$jscoverage['AddressBookPanelPresenterTest.js'].source = ["module<span class=\"k\">(</span>","\t\t<span class=\"s\">\"AddressBookPanelPresenterTest\"</span><span class=\"k\">,</span>","\t\t<span class=\"k\">{</span>","\t\t\tsetup <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// stub di interfaccia grafica</span>","\t\t\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","\t\t\t\telement<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">;</span>","\t\t\t\telement<span class=\"k\">.</span>style<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"s\">\"absolute\"</span><span class=\"k\">;</span>","\t\t\t\telement<span class=\"k\">.</span>style<span class=\"k\">.</span>left <span class=\"k\">=</span> <span class=\"s\">\"-999em\"</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">var</span> list <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"ul\"</span><span class=\"k\">);</span>","\t\t\t\tlist<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"AddressBookList\"</span><span class=\"k\">;</span>","\t\t\t\telement<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>list<span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">var</span> select <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"select\"</span><span class=\"k\">);</span>","\t\t\t\tselect<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"selectGroup\"</span><span class=\"k\">;</span>","\t\t\t\telement<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>select<span class=\"k\">);</span>","","\t\t\t\tdocument<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t\t\t\t<span class=\"c\">// imposta da dove leggere le servlet</span>","\t\t\t\tconfigurationFile <span class=\"k\">=</span> <span class=\"s\">\"/ModelManager/WebContent/Conf/servletlocationtest.xml\"</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"c\">// oggetto da testare</span>","\t\t\t\ttester <span class=\"k\">=</span> <span class=\"k\">new</span> AddressBookPanelPresenter<span class=\"k\">();</span>","\t\t\t\tmediator <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\tdisplayContact <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>c<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tteardown <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testDeleteGroup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> groups <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[]</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\ttester<span class=\"k\">.</span>setGroups<span class=\"k\">(</span>groups<span class=\"k\">);</span>","","\t<span class=\"k\">var</span> group <span class=\"k\">=</span> tester<span class=\"k\">.</span>getGroups<span class=\"k\">();</span>","\t<span class=\"k\">var</span> famiglia <span class=\"k\">=</span> group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> amici <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tname <span class=\"k\">:</span> <span class=\"s\">\"amici\"</span><span class=\"k\">,</span>","\t\tid <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[]</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\ttester<span class=\"k\">.</span>deleteGroup<span class=\"k\">(</span>amici<span class=\"k\">);</span>","\t\tok<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"errore non rilevato\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tequal<span class=\"k\">(</span>err<span class=\"k\">,</span> <span class=\"s\">\"Il gruppo che stai cercando di eliminare non esiste.\"</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"il gruppo coi id 2 non e' presente\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span>","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>deleteGroup<span class=\"k\">(</span>famiglia<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">/*</span>","<span class=\"c\"> * ci sarebbe da testare che add group non aggiunga un gruppo che c'&#195;&#168; gia...ma</span>","<span class=\"c\"> * nn si pu&#195;&#178; fare perch&#195;&#168; nn si aggiunge nessun gruppo realmente</span>","<span class=\"c\"> */</span>","","test<span class=\"k\">(</span>","\t\t<span class=\"s\">\"testInitialize()\"</span><span class=\"k\">,</span>","\t\t<span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\ttester<span class=\"k\">.</span>initialize<span class=\"k\">();</span>","","\t\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> list <span class=\"k\">=</span> element<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">5</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il numero di figli dell'elemento restituito e' 4\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"H1\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo figlio e' un h1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il secondo figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il terzo figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il quarto figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il quinto figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divFilter\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il primo div si chiama divFilter\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divSort\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il secondo div si chiama divSort\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divList\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il terzo div si chiama divList\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divGroup\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il quarto div si chiama divGroup\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> Filter <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di Filter e' 2\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"INPUT\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il primo figlio di divFilter e' un input\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"type\"</span><span class=\"k\">),</span> <span class=\"s\">\"text\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il tipo dell'input e' text\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"INPUT\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il secondo figlio di divFilter e' un input\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"type\"</span><span class=\"k\">),</span> <span class=\"s\">\"image\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il tipo dell'input e' button\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> Sort <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>Sort<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di Sort e' 1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Sort<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SELECT\"</span><span class=\"k\">,</span> <span class=\"s\">\"il figlio di Sort e' un select\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Sort<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"selectSort\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il nome del select e' SelectSort\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> List <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>List<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di List e' 1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>List<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"UL\"</span><span class=\"k\">,</span> <span class=\"s\">\"il figlio di List e' una lista ul\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> Group <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>Group<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di Group e' 1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SELECT\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il figlio di Group e' un select\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"selectGroup\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il nome del select e' SelectSort\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testSetup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setup<span class=\"k\">();</span>","\t<span class=\"k\">var</span> list <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookList\"</span><span class=\"k\">).</span>childNodes<span class=\"k\">;</span>","\t<span class=\"c\">// controllo che abbia scaricato tutti contatti dal server</span>","\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"numero corretto di contatti nella rubrica\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"LI\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un figlio della lista\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"s\">\"ci sono tre figli\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(profilo)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"#text\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un nodo testo\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(stato)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"x.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"l'immagine del primo contatto e' corretta\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>data<span class=\"k\">,</span> <span class=\"s\">\"Flavia Bacco\"</span><span class=\"k\">,</span> <span class=\"s\">\"il nome e congnome sono corretti\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"img/stateavailable.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"lo stato del primo contatto e' corretto\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\t<span class=\"k\">var</span> flavia <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"s\">\"ci sono tre figli\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(profilo)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"#text\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un nodo testo\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(stato)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"y.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"l'immagine del secondo contatto e' corretta\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>data<span class=\"k\">,</span> <span class=\"s\">\"Laura Pausini\"</span><span class=\"k\">,</span> <span class=\"s\">\"il nome e congnome sono corretti\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"img/stateoffline.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"lo stato del secondo contatto e' corretto\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testHide()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\ttester<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>element<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">,</span> <span class=\"s\">\"none\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il pannello viene nascosto correttamente\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span>","\t\t<span class=\"s\">\"testAddContact()\"</span><span class=\"k\">,</span>","\t\t<span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">,</span>","\t\t\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"0\"</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Enrico\"</span><span class=\"k\">,</span>","\t\t\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Botti\"</span><span class=\"k\">,</span>","\t\t\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"enribot@gmail.com\"</span><span class=\"k\">,</span>","\t\t\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">var</span> flavia <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Flavia\"</span><span class=\"k\">,</span>","\t\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Bacco\"</span><span class=\"k\">,</span>","\t\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"flaba@gmail.com\"</span><span class=\"k\">,</span>","\t\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"4\"</span><span class=\"k\">,</span>","\t\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"yy.png\"</span><span class=\"k\">,</span>","\t\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\t\tblocked <span class=\"k\">:</span> <span class=\"s\">\"false\"</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> contacts <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t\t\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contacts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","\t\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t\ttester<span class=\"k\">.</span>addContact<span class=\"k\">(</span>laura<span class=\"k\">);</span>","\t\t\t\tok<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"errore non rilevato\"</span><span class=\"k\">);</span>","\t\t\t\ti<span class=\"k\">++;</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tequal<span class=\"k\">(</span>err<span class=\"k\">,</span> <span class=\"s\">\"Contatto gi&#195;&#160; presente nella rubrica.\"</span><span class=\"k\">,</span>","\t\t\t\t\t\t<span class=\"s\">\"aggiunta di laura non funziona perche e' gia presente in rubrica!\"</span><span class=\"k\">);</span>","\t\t\t\ti<span class=\"k\">++;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>addContact<span class=\"k\">(</span>flavia<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"flavia e' stata aggiunta correttamente\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testRemoveContact()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"0\"</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Enrico\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Botti\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"enribot@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> antonio <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","\t<span class=\"k\">var</span> flavia <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Flavia\"</span><span class=\"k\">,</span>","\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Bacco\"</span><span class=\"k\">,</span>","\t\temail <span class=\"k\">:</span> <span class=\"s\">\"flaba@gmail.com\"</span><span class=\"k\">,</span>","\t\tid <span class=\"k\">:</span> <span class=\"s\">\"4\"</span><span class=\"k\">,</span>","\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"yy.png\"</span><span class=\"k\">,</span>","\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\tblocked <span class=\"k\">:</span> <span class=\"s\">\"false\"</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\ttester<span class=\"k\">.</span>removeContact<span class=\"k\">(</span>flavia<span class=\"k\">);</span>","\t\tok<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"errore non rilevato\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tequal<span class=\"k\">(</span>err<span class=\"k\">,</span> <span class=\"s\">\"Non puoi eliminare un contatto non presente in rubrica.\"</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"rimozione di flavia non possibile perch&#195;&#168; non esite!\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span>","","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>removeContact<span class=\"k\">(</span>laura<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"rimozione di laura andata a buon fine\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>removeContact<span class=\"k\">(</span>antonio<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"rimozione di laura andata a buon fine\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span>","\t\t<span class=\"s\">\"testapplyFilterByString()\"</span><span class=\"k\">,</span>","\t\t<span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Serena\"</span><span class=\"k\">,</span>","\t\t\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"serpau@gmail.com\"</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","\t\t\t<span class=\"c\">// controllo che funzioni il filtro per un contatto esistente</span>","\t\t\t<span class=\"c\">// tramite il nome</span>","\t\t\t<span class=\"k\">var</span> cerca_nome <span class=\"k\">=</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> ele <span class=\"k\">=</span> tester<span class=\"k\">.</span>applyFilterByString<span class=\"k\">(</span>cerca_nome<span class=\"k\">);</span>","\t\t\tequal<span class=\"k\">(</span>ele<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"Trova un solo contatto che ha nome Laura\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>ele<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span> <span class=\"s\">\"Il contatto Laura ha id 0\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"c\">// controllo che funzioni il filtro per un contatto esistente</span>","\t\t\t<span class=\"c\">// tramite il cognome</span>","\t\t\t<span class=\"k\">var</span> cerca_cognome <span class=\"k\">=</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">;</span>","\t\t\tele <span class=\"k\">=</span> tester<span class=\"k\">.</span>applyFilterByString<span class=\"k\">(</span>cerca_cognome<span class=\"k\">);</span>","\t\t\tequal<span class=\"k\">(</span>ele<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"Trova due contatti avente cogome Pausini\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>ele<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo contatto Pausini ha id 0\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>ele<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> <span class=\"s\">\"1\"</span><span class=\"k\">,</span> <span class=\"s\">\"il secondo contatto Pausini ha id 1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"c\">// controllo che funzioni il filtro per un contatto esistente</span>","\t\t\t<span class=\"c\">// tramite il cognome</span>","\t\t\t<span class=\"k\">var</span> cerca_mail <span class=\"k\">=</span> <span class=\"s\">\"laupau@gmail.com\"</span>","\t\t\tele <span class=\"k\">=</span> tester<span class=\"k\">.</span>applyFilterByString<span class=\"k\">(</span>cerca_mail<span class=\"k\">);</span>","\t\t\tequal<span class=\"k\">(</span>ele<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"Trova un solo contatto che ha email laupau@gmail.com\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>ele<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il contatto che ha email laupau@gmail.com ha id 0\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"c\">// controllo che la funzione filtro non trovi un nome non presente</span>","\t\t\t<span class=\"k\">var</span> cerca_nome_non_presente <span class=\"k\">=</span> <span class=\"s\">\"Flavia\"</span><span class=\"k\">;</span>","\t\t\tele <span class=\"k\">=</span> tester<span class=\"k\">.</span>applyFilterByString<span class=\"k\">(</span>cerca_nome_non_presente<span class=\"k\">);</span>","\t\t\tnotEqual<span class=\"k\">(</span>ele<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"Non trova nessun contatto con nome Flavia\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testaddGroup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">);</span>","","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> groups <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"amici\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span><span class=\"k\">,</span>","\t\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setGroups<span class=\"k\">(</span>groups<span class=\"k\">);</span>","","\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\ttester<span class=\"k\">.</span>addGroup<span class=\"k\">(</span><span class=\"s\">\"amici\"</span><span class=\"k\">);</span>","\t\tok<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"errore non rilevato\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tequal<span class=\"k\">(</span>err<span class=\"k\">,</span> <span class=\"s\">\"Il gruppo che stai cercando di inserire esiste gi&#195;&#160;.\"</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"rilevato errore\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span>","","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testBlockUser()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span>","\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\tblocked <span class=\"k\">:</span> <span class=\"k\">true</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Flavia\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Bacco\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"flaba@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span><span class=\"k\">,</span>","\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\tblocked <span class=\"k\">:</span> <span class=\"k\">false</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> flavia <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\ttester<span class=\"k\">.</span>blockUser<span class=\"k\">(</span>laura<span class=\"k\">);</span>","\t\tok<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"errore non rilevato\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tequal<span class=\"k\">(</span>err<span class=\"k\">,</span> <span class=\"s\">\"Contatto gi&#195;&#160; bloccato.\"</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"blocco di Laura non possibile...gi&#195;&#160; bloccato!\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span>","","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>blockUser<span class=\"k\">(</span>flavia<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"s\">\"verificato blocco attivato\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testUnlockUser()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">,</span>","\t\tid <span class=\"k\">:</span> <span class=\"s\">\"12\"</span><span class=\"k\">,</span>","\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\tblocked <span class=\"k\">:</span> <span class=\"s\">\"false\"</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span>","\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\tblocked <span class=\"k\">:</span> <span class=\"k\">true</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Flavia\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Bacco\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"flaba@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span><span class=\"k\">,</span>","\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\tblocked <span class=\"k\">:</span> <span class=\"k\">false</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> flavia <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\ttester<span class=\"k\">.</span>unlockUser<span class=\"k\">(</span>flavia<span class=\"k\">);</span>","\t\tok<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"errore non rilevato\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tequal<span class=\"k\">(</span>err<span class=\"k\">,</span> <span class=\"s\">\"Contatto gi&#195;&#160; sbloccato.\"</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"sblocco di Laura non possibile...gi&#195;&#160; sbloccato!\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t<span class=\"k\">}</span>","","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>unlockUser<span class=\"k\">(</span>laura<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"s\">\"blocco avvenuto con successo\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testapplyFilterByGroup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span>","\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\tblocked <span class=\"k\">:</span> <span class=\"k\">true</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Flavia\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Bacco\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"flaba@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span><span class=\"k\">,</span>","\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\tblocked <span class=\"k\">:</span> <span class=\"k\">false</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Antonio\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Rossi\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"antros@gmail.com\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span><span class=\"k\">,</span>","\t\t\tpicturePath <span class=\"k\">:</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span>","\t\t\tstate <span class=\"k\">:</span> <span class=\"s\">\"offline\"</span><span class=\"k\">,</span>","\t\t\tblocked <span class=\"k\">:</span> <span class=\"k\">false</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","\ttester<span class=\"k\">.</span>setGroups<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span>","\t\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">]</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t<span class=\"k\">var</span> group <span class=\"k\">=</span> tester<span class=\"k\">.</span>getGroups<span class=\"k\">();</span>","\t<span class=\"k\">var</span> famiglia <span class=\"k\">=</span> group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> amici <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tname <span class=\"k\">:</span> <span class=\"s\">\"amici\"</span><span class=\"k\">,</span>","\t\tid <span class=\"k\">:</span> <span class=\"s\">\"1\"</span><span class=\"k\">,</span>","\t\tcontacts <span class=\"k\">:</span> <span class=\"s\">\"\"</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","\t<span class=\"c\">// controllo che funzioni il filtro per un contatto esistente tramite il</span>","\t<span class=\"c\">// nome</span>","","\t<span class=\"k\">var</span> lista_contatti <span class=\"k\">=</span> tester<span class=\"k\">.</span>applyFilterByGroup<span class=\"k\">(</span>famiglia<span class=\"k\">.</span>id<span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>lista_contatti<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"Trova un solo contatto del gruppo contatti\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testAddContactInGroup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\ttester<span class=\"k\">.</span>setGroups<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>","\t\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[]</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> group <span class=\"k\">=</span> tester<span class=\"k\">.</span>getGroups<span class=\"k\">();</span>","\t<span class=\"k\">var</span> famiglia <span class=\"k\">=</span> group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>addContactInGroup<span class=\"k\">(</span>laura<span class=\"k\">,</span> famiglia<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"laura aggiunta correttamente\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testDeleteContactFromGroup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tid<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\ttester<span class=\"k\">.</span>setGroups<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>","\t\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> group <span class=\"k\">=</span> tester<span class=\"k\">.</span>getGroups<span class=\"k\">();</span>","\t<span class=\"k\">var</span> famiglia <span class=\"k\">=</span> group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","\ttester<span class=\"k\">.</span>deleteContactFromGroup<span class=\"k\">(</span>laura<span class=\"k\">,</span> famiglia<span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>deleteContactFromGroup<span class=\"k\">(</span>laura<span class=\"k\">,</span> famiglia<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"laura rimossa correttamente\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">// test se il contatto e' gia' presente in rubrica</span>","test<span class=\"k\">(</span><span class=\"s\">\"testContactAlreadyPresent()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>contactAlreadyPresent<span class=\"k\">(</span>laura<span class=\"k\">),</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"s\">\"laura e' nella rubrica\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">// TODO test ritorna il gruppo in cui e' un contatto</span>","test<span class=\"k\">(</span><span class=\"s\">\"testgetGroupsWhereContactsIs()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setContacts<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"Laura\"</span><span class=\"k\">,</span>","\t\t\tsurname <span class=\"k\">:</span> <span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span>","\t\t\temail <span class=\"k\">:</span> <span class=\"s\">\"laupau@gmail.com\"</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\ttester<span class=\"k\">.</span>setGroups<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t<span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>","\t\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tid <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","\t\t\tname <span class=\"k\">:</span> <span class=\"s\">\"amici\"</span><span class=\"k\">,</span>","\t\t\tcontacts <span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact <span class=\"k\">=</span> tester<span class=\"k\">.</span>getContacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> groups <span class=\"k\">=</span> tester<span class=\"k\">.</span>getGroupsWhereContactsIs<span class=\"k\">(</span>laura<span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>groups<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span> <span class=\"s\">\"laura e' correttamente nel gruppo famiglia\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\tequal<span class=\"k\">(</span>groups<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> <span class=\"s\">\"amici\"</span><span class=\"k\">,</span> <span class=\"s\">\"laura e' correttamente nel gruppo amici\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testShowFiltered\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> filter <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t<span class=\"s\">0</span><span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tname<span class=\"k\">:</span> <span class=\"s\">\"Fiorella\"</span><span class=\"k\">,</span>","\t\t\t\tsurname<span class=\"k\">:</span> <span class=\"s\">\"Mannoia\"</span><span class=\"k\">,</span>","\t\t\t\tid<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">1</span><span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tname<span class=\"k\">:</span> <span class=\"s\">\"Fiorella\"</span><span class=\"k\">,</span>","\t\t\t\tsurname<span class=\"k\">:</span> <span class=\"s\">\"Gaggi\"</span><span class=\"k\">,</span>","\t\t\t\tid<span class=\"k\">:</span> <span class=\"s\">1</span>","\t\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> ul <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookList\"</span><span class=\"k\">);</span>","\tul<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>showFilter<span class=\"k\">(</span>filter<span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>ul<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"numero di elementi corretto\"</span><span class=\"k\">);</span>","\t","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['AddressBookPanelPresenterTest.js'][1]++;
module("AddressBookPanelPresenterTest", {setup: (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][6]++;
  var element = document.createElement("div");
  _$jscoverage['AddressBookPanelPresenterTest.js'][7]++;
  element.id = "AddressBookPanel";
  _$jscoverage['AddressBookPanelPresenterTest.js'][8]++;
  element.style.position = "absolute";
  _$jscoverage['AddressBookPanelPresenterTest.js'][9]++;
  element.style.left = "-999em";
  _$jscoverage['AddressBookPanelPresenterTest.js'][11]++;
  var list = document.createElement("ul");
  _$jscoverage['AddressBookPanelPresenterTest.js'][12]++;
  list.id = "AddressBookList";
  _$jscoverage['AddressBookPanelPresenterTest.js'][13]++;
  element.appendChild(list);
  _$jscoverage['AddressBookPanelPresenterTest.js'][15]++;
  var select = document.createElement("select");
  _$jscoverage['AddressBookPanelPresenterTest.js'][16]++;
  select.id = "selectGroup";
  _$jscoverage['AddressBookPanelPresenterTest.js'][17]++;
  element.appendChild(select);
  _$jscoverage['AddressBookPanelPresenterTest.js'][19]++;
  document.body.appendChild(element);
  _$jscoverage['AddressBookPanelPresenterTest.js'][21]++;
  configurationFile = "/ModelManager/WebContent/Conf/servletlocationtest.xml";
  _$jscoverage['AddressBookPanelPresenterTest.js'][23]++;
  tester = new AddressBookPanelPresenter();
  _$jscoverage['AddressBookPanelPresenterTest.js'][24]++;
  mediator = {displayContact: (function (c) {
})};
}), teardown: (function () {
})});
_$jscoverage['AddressBookPanelPresenterTest.js'][33]++;
test("testDeleteGroup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][34]++;
  var groups = {0: {name: "famiglia", id: 0, contacts: []}};
  _$jscoverage['AddressBookPanelPresenterTest.js'][42]++;
  tester.setGroups(groups);
  _$jscoverage['AddressBookPanelPresenterTest.js'][44]++;
  var group = tester.getGroups();
  _$jscoverage['AddressBookPanelPresenterTest.js'][45]++;
  var famiglia = group[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][46]++;
  var amici = {name: "amici", id: 1, contacts: []};
  _$jscoverage['AddressBookPanelPresenterTest.js'][51]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][52]++;
  try {
    _$jscoverage['AddressBookPanelPresenterTest.js'][53]++;
    tester.deleteGroup(amici);
    _$jscoverage['AddressBookPanelPresenterTest.js'][54]++;
    ok(false, "errore non rilevato");
    _$jscoverage['AddressBookPanelPresenterTest.js'][55]++;
    (i++);
  }
  catch (err) {
    _$jscoverage['AddressBookPanelPresenterTest.js'][57]++;
    equal(err, "Il gruppo che stai cercando di eliminare non esiste.", "il gruppo coi id 2 non e' presente");
    _$jscoverage['AddressBookPanelPresenterTest.js'][59]++;
    (i++);
  }
  _$jscoverage['AddressBookPanelPresenterTest.js'][61]++;
  equal(tester.deleteGroup(famiglia), true, "");
  _$jscoverage['AddressBookPanelPresenterTest.js'][62]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][64]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][72]++;
test("testInitialize()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][75]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][76]++;
  tester.initialize();
  _$jscoverage['AddressBookPanelPresenterTest.js'][78]++;
  var element = document.getElementById("AddressBookPanel");
  _$jscoverage['AddressBookPanelPresenterTest.js'][79]++;
  var list = element.childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][80]++;
  equal(list.length, 5, "il numero di figli dell'elemento restituito e' 4");
  _$jscoverage['AddressBookPanelPresenterTest.js'][82]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][84]++;
  equal(list[0].nodeName, "H1", "il primo figlio e' un h1");
  _$jscoverage['AddressBookPanelPresenterTest.js'][85]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][87]++;
  equal(list[1].nodeName, "DIV", "il secondo figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest.js'][88]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][89]++;
  equal(list[2].nodeName, "DIV", "il terzo figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest.js'][90]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][91]++;
  equal(list[3].nodeName, "DIV", "il quarto figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest.js'][92]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][93]++;
  equal(list[4].nodeName, "DIV", "il quinto figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest.js'][94]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][96]++;
  equal(list[1].getAttribute("id"), "divFilter", "il primo div si chiama divFilter");
  _$jscoverage['AddressBookPanelPresenterTest.js'][98]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][99]++;
  equal(list[2].getAttribute("id"), "divSort", "il secondo div si chiama divSort");
  _$jscoverage['AddressBookPanelPresenterTest.js'][101]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][102]++;
  equal(list[3].getAttribute("id"), "divList", "il terzo div si chiama divList");
  _$jscoverage['AddressBookPanelPresenterTest.js'][104]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][105]++;
  equal(list[4].getAttribute("id"), "divGroup", "il quarto div si chiama divGroup");
  _$jscoverage['AddressBookPanelPresenterTest.js'][107]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][109]++;
  var Filter = list[1].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][110]++;
  equal(Filter.length, 2, "il numero di figli di Filter e' 2");
  _$jscoverage['AddressBookPanelPresenterTest.js'][111]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][113]++;
  equal(Filter[0].nodeName, "INPUT", "il primo figlio di divFilter e' un input");
  _$jscoverage['AddressBookPanelPresenterTest.js'][115]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][116]++;
  equal(Filter[0].getAttribute("type"), "text", "il tipo dell'input e' text");
  _$jscoverage['AddressBookPanelPresenterTest.js'][118]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][120]++;
  equal(Filter[1].nodeName, "INPUT", "il secondo figlio di divFilter e' un input");
  _$jscoverage['AddressBookPanelPresenterTest.js'][122]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][123]++;
  equal(Filter[1].getAttribute("type"), "image", "il tipo dell'input e' button");
  _$jscoverage['AddressBookPanelPresenterTest.js'][125]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][127]++;
  var Sort = list[2].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][128]++;
  equal(Sort.length, 1, "il numero di figli di Sort e' 1");
  _$jscoverage['AddressBookPanelPresenterTest.js'][129]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][130]++;
  equal(Sort[0].nodeName, "SELECT", "il figlio di Sort e' un select");
  _$jscoverage['AddressBookPanelPresenterTest.js'][131]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][132]++;
  equal(Sort[0].getAttribute("id"), "selectSort", "il nome del select e' SelectSort");
  _$jscoverage['AddressBookPanelPresenterTest.js'][134]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][136]++;
  var List = list[3].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][137]++;
  equal(List.length, 1, "il numero di figli di List e' 1");
  _$jscoverage['AddressBookPanelPresenterTest.js'][138]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][139]++;
  equal(List[0].nodeName, "UL", "il figlio di List e' una lista ul");
  _$jscoverage['AddressBookPanelPresenterTest.js'][140]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][142]++;
  var Group = list[4].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][143]++;
  equal(Group.length, 1, "il numero di figli di Group e' 1");
  _$jscoverage['AddressBookPanelPresenterTest.js'][144]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][145]++;
  equal(Group[0].nodeName, "SELECT", "il figlio di Group e' un select");
  _$jscoverage['AddressBookPanelPresenterTest.js'][147]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][148]++;
  equal(Group[0].getAttribute("id"), "selectGroup", "il nome del select e' SelectSort");
  _$jscoverage['AddressBookPanelPresenterTest.js'][150]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][152]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][155]++;
test("testSetup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][156]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][157]++;
  tester.setup();
  _$jscoverage['AddressBookPanelPresenterTest.js'][158]++;
  var list = document.getElementById("AddressBookList").childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][160]++;
  equal(list.length, 2, "numero corretto di contatti nella rubrica");
  _$jscoverage['AddressBookPanelPresenterTest.js'][161]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][163]++;
  equal(list[0].nodeName, "LI", "il primo figlio dell'elemento e' un figlio della lista");
  _$jscoverage['AddressBookPanelPresenterTest.js'][165]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][167]++;
  var laura = list[1].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][169]++;
  equal(laura.length, 3, "ci sono tre figli");
  _$jscoverage['AddressBookPanelPresenterTest.js'][170]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][172]++;
  equal(laura[0].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(profilo)");
  _$jscoverage['AddressBookPanelPresenterTest.js'][174]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][176]++;
  equal(laura[1].nodeName, "#text", "il primo figlio dell'elemento e' un nodo testo");
  _$jscoverage['AddressBookPanelPresenterTest.js'][178]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][180]++;
  equal(laura[2].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(stato)");
  _$jscoverage['AddressBookPanelPresenterTest.js'][182]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][184]++;
  equal(laura[0].getAttribute("src"), "x.png", "l'immagine del primo contatto e' corretta");
  _$jscoverage['AddressBookPanelPresenterTest.js'][186]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][188]++;
  equal(laura[1].data, "Flavia Bacco", "il nome e congnome sono corretti");
  _$jscoverage['AddressBookPanelPresenterTest.js'][189]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][191]++;
  equal(laura[2].getAttribute("src"), "img/stateavailable.png", "lo stato del primo contatto e' corretto");
  _$jscoverage['AddressBookPanelPresenterTest.js'][193]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][195]++;
  var flavia = list[0].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest.js'][197]++;
  equal(flavia.length, 3, "ci sono tre figli");
  _$jscoverage['AddressBookPanelPresenterTest.js'][198]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][200]++;
  equal(flavia[0].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(profilo)");
  _$jscoverage['AddressBookPanelPresenterTest.js'][202]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][204]++;
  equal(flavia[1].nodeName, "#text", "il primo figlio dell'elemento e' un nodo testo");
  _$jscoverage['AddressBookPanelPresenterTest.js'][206]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][208]++;
  equal(flavia[2].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(stato)");
  _$jscoverage['AddressBookPanelPresenterTest.js'][210]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][212]++;
  equal(flavia[0].getAttribute("src"), "y.png", "l'immagine del secondo contatto e' corretta");
  _$jscoverage['AddressBookPanelPresenterTest.js'][214]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][216]++;
  equal(flavia[1].data, "Laura Pausini", "il nome e congnome sono corretti");
  _$jscoverage['AddressBookPanelPresenterTest.js'][217]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][219]++;
  equal(flavia[2].getAttribute("src"), "img/stateoffline.png", "lo stato del secondo contatto e' corretto");
  _$jscoverage['AddressBookPanelPresenterTest.js'][221]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][223]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][226]++;
test("testHide()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][227]++;
  tester.hide();
  _$jscoverage['AddressBookPanelPresenterTest.js'][228]++;
  var element = document.getElementById("AddressBookPanel");
  _$jscoverage['AddressBookPanelPresenterTest.js'][229]++;
  equal(element.style.display, "none", "il pannello viene nascosto correttamente");
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][233]++;
test("testAddContact()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][237]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com", id: "0"}, 1: {name: "Enrico", surname: "Botti", email: "enribot@gmail.com", id: "1"}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][252]++;
  var flavia = {name: "Flavia", surname: "Bacco", email: "flaba@gmail.com", id: "4", picturePath: "yy.png", state: "offline", blocked: "false"};
  _$jscoverage['AddressBookPanelPresenterTest.js'][261]++;
  var contacts = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][262]++;
  var laura = contacts[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][264]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][265]++;
  try {
    _$jscoverage['AddressBookPanelPresenterTest.js'][266]++;
    tester.addContact(laura);
    _$jscoverage['AddressBookPanelPresenterTest.js'][267]++;
    ok(false, "errore non rilevato");
    _$jscoverage['AddressBookPanelPresenterTest.js'][268]++;
    (i++);
  }
  catch (err) {
    _$jscoverage['AddressBookPanelPresenterTest.js'][270]++;
    equal(err, "Contatto gi\u00c3\u00a0 presente nella rubrica.", "aggiunta di laura non funziona perche e' gia presente in rubrica!");
    _$jscoverage['AddressBookPanelPresenterTest.js'][272]++;
    (i++);
  }
  _$jscoverage['AddressBookPanelPresenterTest.js'][275]++;
  equal(tester.addContact(flavia), true, "flavia e' stata aggiunta correttamente");
  _$jscoverage['AddressBookPanelPresenterTest.js'][277]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][279]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][282]++;
test("testRemoveContact()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][283]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com", id: "0"}, 1: {name: "Enrico", surname: "Botti", email: "enribot@gmail.com", id: "1"}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][298]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][299]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][300]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][301]++;
  var antonio = contact[1];
  _$jscoverage['AddressBookPanelPresenterTest.js'][303]++;
  var flavia = {name: "Flavia", surname: "Bacco", email: "flaba@gmail.com", id: "4", picturePath: "yy.png", state: "offline", blocked: "false"};
  _$jscoverage['AddressBookPanelPresenterTest.js'][313]++;
  try {
    _$jscoverage['AddressBookPanelPresenterTest.js'][314]++;
    tester.removeContact(flavia);
    _$jscoverage['AddressBookPanelPresenterTest.js'][315]++;
    ok(false, "errore non rilevato");
    _$jscoverage['AddressBookPanelPresenterTest.js'][316]++;
    (i++);
  }
  catch (err) {
    _$jscoverage['AddressBookPanelPresenterTest.js'][318]++;
    equal(err, "Non puoi eliminare un contatto non presente in rubrica.", "rimozione di flavia non possibile perch\u00c3\u00a8 non esite!");
    _$jscoverage['AddressBookPanelPresenterTest.js'][320]++;
    (i++);
  }
  _$jscoverage['AddressBookPanelPresenterTest.js'][323]++;
  equal(tester.removeContact(laura), true, "rimozione di laura andata a buon fine");
  _$jscoverage['AddressBookPanelPresenterTest.js'][325]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][326]++;
  equal(tester.removeContact(antonio), true, "rimozione di laura andata a buon fine");
  _$jscoverage['AddressBookPanelPresenterTest.js'][328]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][330]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][333]++;
test("testapplyFilterByString()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][337]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}, 1: {name: "Serena", surname: "Pausini", email: "serpau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][350]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][354]++;
  var cerca_nome = "Laura";
  _$jscoverage['AddressBookPanelPresenterTest.js'][355]++;
  var ele = tester.applyFilterByString(cerca_nome);
  _$jscoverage['AddressBookPanelPresenterTest.js'][356]++;
  equal(ele.length, 1, "Trova un solo contatto che ha nome Laura");
  _$jscoverage['AddressBookPanelPresenterTest.js'][357]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][358]++;
  equal(ele[0], "0", "Il contatto Laura ha id 0");
  _$jscoverage['AddressBookPanelPresenterTest.js'][359]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][363]++;
  var cerca_cognome = "Pausini";
  _$jscoverage['AddressBookPanelPresenterTest.js'][364]++;
  ele = tester.applyFilterByString(cerca_cognome);
  _$jscoverage['AddressBookPanelPresenterTest.js'][365]++;
  equal(ele.length, 2, "Trova due contatti avente cogome Pausini");
  _$jscoverage['AddressBookPanelPresenterTest.js'][366]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][367]++;
  equal(ele[0], "0", "il primo contatto Pausini ha id 0");
  _$jscoverage['AddressBookPanelPresenterTest.js'][368]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][369]++;
  equal(ele[1], "1", "il secondo contatto Pausini ha id 1");
  _$jscoverage['AddressBookPanelPresenterTest.js'][370]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][374]++;
  var cerca_mail = "laupau@gmail.com";
  _$jscoverage['AddressBookPanelPresenterTest.js'][375]++;
  ele = tester.applyFilterByString(cerca_mail);
  _$jscoverage['AddressBookPanelPresenterTest.js'][376]++;
  equal(ele.length, 1, "Trova un solo contatto che ha email laupau@gmail.com");
  _$jscoverage['AddressBookPanelPresenterTest.js'][378]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][379]++;
  equal(ele[0], "0", "il contatto che ha email laupau@gmail.com ha id 0");
  _$jscoverage['AddressBookPanelPresenterTest.js'][381]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][384]++;
  var cerca_nome_non_presente = "Flavia";
  _$jscoverage['AddressBookPanelPresenterTest.js'][385]++;
  ele = tester.applyFilterByString(cerca_nome_non_presente);
  _$jscoverage['AddressBookPanelPresenterTest.js'][386]++;
  notEqual(ele.length, 1, "Non trova nessun contatto con nome Flavia");
  _$jscoverage['AddressBookPanelPresenterTest.js'][387]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][389]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][392]++;
test("testaddGroup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][394]++;
  var element = document.getElementById("AddressBookPanel");
  _$jscoverage['AddressBookPanelPresenterTest.js'][396]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][397]++;
  var groups = {1: {name: "amici", id: "1", contacts: [0]}};
  _$jscoverage['AddressBookPanelPresenterTest.js'][404]++;
  tester.setGroups(groups);
  _$jscoverage['AddressBookPanelPresenterTest.js'][406]++;
  try {
    _$jscoverage['AddressBookPanelPresenterTest.js'][407]++;
    tester.addGroup("amici");
    _$jscoverage['AddressBookPanelPresenterTest.js'][408]++;
    ok(false, "errore non rilevato");
    _$jscoverage['AddressBookPanelPresenterTest.js'][409]++;
    (i++);
  }
  catch (err) {
    _$jscoverage['AddressBookPanelPresenterTest.js'][411]++;
    equal(err, "Il gruppo che stai cercando di inserire esiste gi\u00c3\u00a0.", "rilevato errore");
    _$jscoverage['AddressBookPanelPresenterTest.js'][413]++;
    (i++);
  }
  _$jscoverage['AddressBookPanelPresenterTest.js'][416]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][419]++;
test("testBlockUser()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][420]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][421]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com", id: "0", picturePath: "xx.png", state: "offline", blocked: true}, 1: {name: "Flavia", surname: "Bacco", email: "flaba@gmail.com", id: "1", picturePath: "xx.png", state: "offline", blocked: false}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][442]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][443]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][444]++;
  var flavia = contact[1];
  _$jscoverage['AddressBookPanelPresenterTest.js'][446]++;
  try {
    _$jscoverage['AddressBookPanelPresenterTest.js'][447]++;
    tester.blockUser(laura);
    _$jscoverage['AddressBookPanelPresenterTest.js'][448]++;
    ok(false, "errore non rilevato");
    _$jscoverage['AddressBookPanelPresenterTest.js'][449]++;
    (i++);
  }
  catch (err) {
    _$jscoverage['AddressBookPanelPresenterTest.js'][451]++;
    equal(err, "Contatto gi\u00c3\u00a0 bloccato.", "blocco di Laura non possibile...gi\u00c3\u00a0 bloccato!");
    _$jscoverage['AddressBookPanelPresenterTest.js'][453]++;
    (i++);
  }
  _$jscoverage['AddressBookPanelPresenterTest.js'][456]++;
  equal(tester.blockUser(flavia), true, "verificato blocco attivato");
  _$jscoverage['AddressBookPanelPresenterTest.js'][457]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][458]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][461]++;
test("testUnlockUser()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][462]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][463]++;
  var element = document.getElementById("AddressBookPanel");
  _$jscoverage['AddressBookPanelPresenterTest.js'][464]++;
  var laura = {name: "Laura", surname: "Pausini", email: "laupau@gmail.com", id: "12", picturePath: "xx.png", state: "offline", blocked: "false"};
  _$jscoverage['AddressBookPanelPresenterTest.js'][473]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com", id: "0", picturePath: "xx.png", state: "offline", blocked: true}, 1: {name: "Flavia", surname: "Bacco", email: "flaba@gmail.com", id: "1", picturePath: "xx.png", state: "offline", blocked: false}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][494]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][495]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][496]++;
  var flavia = contact[1];
  _$jscoverage['AddressBookPanelPresenterTest.js'][498]++;
  try {
    _$jscoverage['AddressBookPanelPresenterTest.js'][499]++;
    tester.unlockUser(flavia);
    _$jscoverage['AddressBookPanelPresenterTest.js'][500]++;
    ok(false, "errore non rilevato");
    _$jscoverage['AddressBookPanelPresenterTest.js'][501]++;
    (i++);
  }
  catch (err) {
    _$jscoverage['AddressBookPanelPresenterTest.js'][503]++;
    equal(err, "Contatto gi\u00c3\u00a0 sbloccato.", "sblocco di Laura non possibile...gi\u00c3\u00a0 sbloccato!");
    _$jscoverage['AddressBookPanelPresenterTest.js'][505]++;
    (i++);
  }
  _$jscoverage['AddressBookPanelPresenterTest.js'][508]++;
  equal(tester.unlockUser(laura), true, "blocco avvenuto con successo");
  _$jscoverage['AddressBookPanelPresenterTest.js'][509]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][511]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][514]++;
test("testapplyFilterByGroup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][516]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com", id: "0", picturePath: "xx.png", state: "offline", blocked: true}, 1: {name: "Flavia", surname: "Bacco", email: "flaba@gmail.com", id: "1", picturePath: "xx.png", state: "offline", blocked: false}, 2: {name: "Antonio", surname: "Rossi", email: "antros@gmail.com", id: "1", picturePath: "xx.png", state: "offline", blocked: false}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][546]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][547]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][549]++;
  tester.setGroups({0: {name: "famiglia", id: "0", contacts: [0, 1]}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][557]++;
  var group = tester.getGroups();
  _$jscoverage['AddressBookPanelPresenterTest.js'][558]++;
  var famiglia = group[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][559]++;
  var amici = {name: "amici", id: "1", contacts: ""};
  _$jscoverage['AddressBookPanelPresenterTest.js'][565]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][570]++;
  var lista_contatti = tester.applyFilterByGroup(famiglia.id);
  _$jscoverage['AddressBookPanelPresenterTest.js'][571]++;
  equal(lista_contatti.length, 2, "Trova un solo contatto del gruppo contatti");
  _$jscoverage['AddressBookPanelPresenterTest.js'][573]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][575]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][578]++;
test("testAddContactInGroup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][579]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][580]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][587]++;
  tester.setGroups({0: {id: 0, name: "famiglia", contacts: []}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][594]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][595]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][596]++;
  var group = tester.getGroups();
  _$jscoverage['AddressBookPanelPresenterTest.js'][597]++;
  var famiglia = group[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][599]++;
  equal(tester.addContactInGroup(laura, famiglia), true, "laura aggiunta correttamente");
  _$jscoverage['AddressBookPanelPresenterTest.js'][601]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][602]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][605]++;
test("testDeleteContactFromGroup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][606]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][607]++;
  tester.setContacts({0: {id: 0, name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][615]++;
  tester.setGroups({0: {id: 0, name: "famiglia", contacts: [0]}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][622]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][623]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][624]++;
  var group = tester.getGroups();
  _$jscoverage['AddressBookPanelPresenterTest.js'][625]++;
  var famiglia = group[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][627]++;
  tester.deleteContactFromGroup(laura, famiglia);
  _$jscoverage['AddressBookPanelPresenterTest.js'][628]++;
  equal(tester.deleteContactFromGroup(laura, famiglia), true, "laura rimossa correttamente");
  _$jscoverage['AddressBookPanelPresenterTest.js'][630]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][631]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][635]++;
test("testContactAlreadyPresent()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][636]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][637]++;
  tester.setContacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][644]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][645]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][646]++;
  equal(tester.contactAlreadyPresent(laura), true, "laura e' nella rubrica");
  _$jscoverage['AddressBookPanelPresenterTest.js'][647]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][648]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][652]++;
test("testgetGroupsWhereContactsIs()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][653]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][654]++;
  tester.setContacts({0: {id: 0, name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][662]++;
  tester.setGroups({0: {id: 0, name: "famiglia", contacts: [0]}, 1: {id: 1, name: "amici", contacts: [0]}});
  _$jscoverage['AddressBookPanelPresenterTest.js'][674]++;
  var contact = tester.getContacts();
  _$jscoverage['AddressBookPanelPresenterTest.js'][675]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest.js'][676]++;
  var groups = tester.getGroupsWhereContactsIs(laura);
  _$jscoverage['AddressBookPanelPresenterTest.js'][677]++;
  equal(groups[0], "famiglia", "laura e' correttamente nel gruppo famiglia");
  _$jscoverage['AddressBookPanelPresenterTest.js'][678]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][679]++;
  equal(groups[1], "amici", "laura e' correttamente nel gruppo amici");
  _$jscoverage['AddressBookPanelPresenterTest.js'][680]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][682]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest.js'][685]++;
test("testShowFiltered", (function () {
  _$jscoverage['AddressBookPanelPresenterTest.js'][686]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest.js'][688]++;
  var filter = {0: {name: "Fiorella", surname: "Mannoia", id: 0}, 1: {name: "Fiorella", surname: "Gaggi", id: 1}};
  _$jscoverage['AddressBookPanelPresenterTest.js'][700]++;
  var ul = document.getElementById("AddressBookList");
  _$jscoverage['AddressBookPanelPresenterTest.js'][701]++;
  ul.innerHTML = "";
  _$jscoverage['AddressBookPanelPresenterTest.js'][702]++;
  tester.showFilter(filter);
  _$jscoverage['AddressBookPanelPresenterTest.js'][703]++;
  equal(ul.childNodes.length, 2, "numero di elementi corretto");
  _$jscoverage['AddressBookPanelPresenterTest.js'][705]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest.js'][706]++;
  expect(i);
}));
