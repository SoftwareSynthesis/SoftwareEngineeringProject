/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['AddressBookPanelPresenterTest_ste.js']) {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'] = [];
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][1] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][6] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][7] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][8] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][9] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][10] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][12] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][14] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][20] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][21] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][22] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][24] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][25] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][26] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][28] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][30] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][31] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][32] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][33] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][34] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][35] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][36] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][37] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][39] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][41] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][42] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][44] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][45] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][47] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][48] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][50] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][52] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][53] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][54] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][56] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][58] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][59] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][61] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][63] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][65] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][66] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][68] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][70] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][71] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][72] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][73] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][74] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][75] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][77] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][79] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][80] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][81] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][82] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][83] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][85] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][86] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][87] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][88] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][90] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][91] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][93] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][95] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][98] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][99] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][100] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][101] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][103] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][104] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][106] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][108] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][110] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][112] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][113] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][115] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][117] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][119] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][121] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][123] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][125] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][127] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][129] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][131] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][132] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][134] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][136] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][138] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][140] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][141] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][143] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][145] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][147] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][149] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][151] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][153] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][155] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][157] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][159] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][160] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][162] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][164] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][166] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][167] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][168] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][169] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][170] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][171] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][173] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][174] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][176] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][177] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][179] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][180] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][182] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][183] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][184] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][185] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][188] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][189] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][190] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][191] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][196] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][197] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][198] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][199] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][200] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][201] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][202] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][203] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][205] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][206] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][207] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][210] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][211] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][212] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][213] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][214] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][215] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][216] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][217] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][219] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][220] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][221] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][222] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][226] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][227] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][228] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][229] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][230] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][231] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][232] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][233] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][236] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][237] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][238] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][239] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][245] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][246] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][247] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][248] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][249] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][250] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][251] = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][253] = 0;
}
_$jscoverage['AddressBookPanelPresenterTest_ste.js'].source = ["module<span class=\"k\">(</span>","\t\t<span class=\"s\">\"AddressBookPanelPresenterTest\"</span><span class=\"k\">,</span>","\t\t<span class=\"k\">{</span>","\t\t\tsetup <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// stub di interfaccia grafica</span>","\t\t\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","\t\t\t\telement<span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">;</span>","\t\t\t\telement<span class=\"k\">.</span>style<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"s\">\"absolute\"</span><span class=\"k\">;</span>","\t\t\t\telement<span class=\"k\">.</span>style<span class=\"k\">.</span>left <span class=\"k\">=</span> <span class=\"s\">\"-999em\"</span><span class=\"k\">;</span>","\t\t\t\tdocument<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>element<span class=\"k\">);</span>","\t\t\t\t<span class=\"c\">// imposta da dove leggere le servlet</span>","\t\t\t\tconfigurationFile <span class=\"k\">=</span> <span class=\"s\">\"/ModelManager/WebContent/Conf/servletlocationtest.xml\"</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"c\">// oggetto da testare</span>","\t\t\t\ttester <span class=\"k\">=</span> <span class=\"k\">new</span> AddressBookPanelPresenter<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tteardown <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testInitialize()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t\ttester<span class=\"k\">.</span>initialize<span class=\"k\">();</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> list <span class=\"k\">=</span> element<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">4</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il numero di figli dell'elemento restituito e' 4\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il secondo figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il terzo figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"DIV\"</span><span class=\"k\">,</span> <span class=\"s\">\"il quarto figlio e' un div\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divFilter\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il primo div si chiama divFilter\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divSort\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il secondo div si chiama divSort\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divList\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il terzo div si chiama divList\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"divGroup\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il quarto div si chiama divGroup\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> Filter <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di Filter e' 2\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"INPUT\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il primo figlio di divFilter e' un input\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"type\"</span><span class=\"k\">),</span> <span class=\"s\">\"text\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il tipo dell'input e' text\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"INPUT\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il secondo figlio di divFilter e' un input\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Filter<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"type\"</span><span class=\"k\">),</span> <span class=\"s\">\"image\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il tipo dell'input e' button\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> Sort <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>Sort<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di Sort e' 1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Sort<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SELECT\"</span><span class=\"k\">,</span> <span class=\"s\">\"il figlio di Sort e' un select\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Sort<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"selectSort\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il nome del select e' SelectSort\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> List <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>List<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di List e' 1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>List<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"UL\"</span><span class=\"k\">,</span> <span class=\"s\">\"il figlio di List &#239;&#191;&#189; una lista ul\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\t<span class=\"k\">var</span> Group <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\t\tequal<span class=\"k\">(</span>Group<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"il numero di figli di Group e' 1\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"SELECT\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il figlio di Group e' un select\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","\t\t\tequal<span class=\"k\">(</span>Group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">),</span> <span class=\"s\">\"selectGroup\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"il nome del select e' SelectSort\"</span><span class=\"k\">);</span>","\t\t\ti<span class=\"k\">++;</span>","","\t\t\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testSetup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>setup<span class=\"k\">();</span>","\t<span class=\"k\">var</span> list <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookList\"</span><span class=\"k\">).</span>childNodes<span class=\"k\">;</span>","\t<span class=\"c\">// controllo che abbia scaricato tutti contatti dal server</span>","\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"numero corretto di contatti nella rubrica\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"LI\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un figlio della lista\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\t<span class=\"k\">var</span> laura <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"s\">\"ci sono tre figli\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(profilo)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"#text\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un nodo testo\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(stato)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"x.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"l'immagine del primo contatto e' corretta\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>data<span class=\"k\">,</span> <span class=\"s\">\"Flavia Bacco\"</span><span class=\"k\">,</span> <span class=\"s\">\"il nome e congnome sono corretti\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>laura<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"img/stateavailable.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"lo stato del primo contatto e' corretto\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\t<span class=\"k\">var</span> flavia <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"s\">\"ci sono tre figli\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(profilo)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"#text\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un nodo testo\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il primo figlio dell'elemento e' un immagine(stato)\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"y.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"l'immagine del secondo contatto e' corretta\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>data<span class=\"k\">,</span> <span class=\"s\">\"Laura Pausini\"</span><span class=\"k\">,</span> <span class=\"s\">\"il nome e congnome sono corretti\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","","\tequal<span class=\"k\">(</span>flavia<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">),</span> <span class=\"s\">\"img/stateoffline.png\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"lo stato del secondo contatto e' corretto\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\t\t<span class=\"c\">//test del popolamento e controllo dei gruppi</span>","\t\t<span class=\"k\">var</span> listGroup<span class=\"k\">=</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"selectGroup\"</span><span class=\"k\">).</span>childNodes<span class=\"k\">;</span>","\t\tequal<span class=\"k\">(</span>listGroup<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"numero corretto di gruppi nella rubrica\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\tequal<span class=\"k\">(</span>listGroup<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"OPTION\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo figlio dell'elemento e' un figlio della lista\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t<span class=\"k\">var</span> famiglia<span class=\"k\">=</span>listGroup<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","","\t\tequal<span class=\"k\">(</span>famiglia<span class=\"k\">.</span>length<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"ci sono tre figli\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","","\t\tequal<span class=\"k\">(</span>famiglia<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"#text\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo figlio dell'elemento e' un nodo testo\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\tequal<span class=\"k\">(</span>famiglia<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>data<span class=\"k\">,</span><span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span> <span class=\"s\">\"il nome del gruppo 0 e' famiglia\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\t<span class=\"k\">var</span> amici<span class=\"k\">=</span>listGroup<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\tequal<span class=\"k\">(</span>amici<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>data<span class=\"k\">,</span><span class=\"s\">\"amici\"</span><span class=\"k\">,</span> <span class=\"s\">\"il nome del gruppo 1 e' amici\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testHide()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\ttester<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t<span class=\"k\">var</span> element <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"AddressBookPanel\"</span><span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>element<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">,</span> <span class=\"s\">\"none\"</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">\"il pannello viene nascosto correttamente\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">//TODO test aggiunta contatto in un gruppo</span>","test<span class=\"k\">(</span><span class=\"s\">\"testAddContactInGroup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>set_contacts<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">0</span><span class=\"k\">:</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Laura\"</span><span class=\"k\">,</span> surname<span class=\"k\">:</span><span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span> email<span class=\"k\">:</span><span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">}}</span><span class=\"k\">);</span>","\ttester<span class=\"k\">.</span>set_groups<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">0</span><span class=\"k\">:</span><span class=\"k\">{</span>id<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>name<span class=\"k\">:</span><span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>contacts<span class=\"k\">:[]</span><span class=\"k\">}}</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact<span class=\"k\">=</span>tester<span class=\"k\">.</span>get_contacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura<span class=\"k\">=</span>contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> group<span class=\"k\">=</span>tester<span class=\"k\">.</span>get_groups<span class=\"k\">();</span>","\t<span class=\"k\">var</span> famiglia<span class=\"k\">=</span>group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>addContactInGroup<span class=\"k\">(</span>laura<span class=\"k\">,</span>famiglia<span class=\"k\">),</span><span class=\"k\">true</span><span class=\"k\">,</span><span class=\"s\">\"laura aggiunta correttamente\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","test<span class=\"k\">(</span><span class=\"s\">\"testDeleteContactFromGroup()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>set_contacts<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">0</span><span class=\"k\">:</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Laura\"</span><span class=\"k\">,</span> surname<span class=\"k\">:</span><span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span> email<span class=\"k\">:</span><span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">}}</span><span class=\"k\">);</span>","\ttester<span class=\"k\">.</span>set_groups<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">0</span><span class=\"k\">:</span><span class=\"k\">{</span>id<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span>name<span class=\"k\">:</span><span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>contacts<span class=\"k\">:[]</span><span class=\"k\">}}</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact<span class=\"k\">=</span>tester<span class=\"k\">.</span>get_contacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura<span class=\"k\">=</span>contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> group<span class=\"k\">=</span>tester<span class=\"k\">.</span>get_groups<span class=\"k\">();</span>","\t<span class=\"k\">var</span> famiglia<span class=\"k\">=</span>group<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t","\ttester<span class=\"k\">.</span>addContactInGroup<span class=\"k\">(</span>laura<span class=\"k\">,</span>famiglia<span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>deleteContactFromGroup<span class=\"k\">(</span>laura<span class=\"k\">,</span>famiglia<span class=\"k\">),</span><span class=\"k\">true</span><span class=\"k\">,</span><span class=\"s\">\"laura rimossa correttamente\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">//test se il contatto e' gia' presente in rubrica</span>","test<span class=\"k\">(</span><span class=\"s\">\"testContactAlreadyPresent()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>set_contacts<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">0</span><span class=\"k\">:</span><span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Laura\"</span><span class=\"k\">,</span> surname<span class=\"k\">:</span><span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span> email<span class=\"k\">:</span><span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">}}</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact<span class=\"k\">=</span>tester<span class=\"k\">.</span>get_contacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura<span class=\"k\">=</span>contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\tequal<span class=\"k\">(</span>tester<span class=\"k\">.</span>contactAlreadyPresent<span class=\"k\">(</span>laura<span class=\"k\">),</span><span class=\"k\">true</span><span class=\"k\">,</span><span class=\"s\">\"laura e' nella rubrica\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span><span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">//TODO test ritorna il gruppo in cui e' un contatto</span>","test<span class=\"k\">(</span><span class=\"s\">\"testgetGroupsWhereContactsIs()\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t<span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>","\ttester<span class=\"k\">.</span>set_contacts<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">0</span><span class=\"k\">:</span><span class=\"k\">{</span>id<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span> name<span class=\"k\">:</span><span class=\"s\">\"Laura\"</span><span class=\"k\">,</span> surname<span class=\"k\">:</span><span class=\"s\">\"Pausini\"</span><span class=\"k\">,</span> email<span class=\"k\">:</span><span class=\"s\">\"laupau@gmail.com\"</span><span class=\"k\">}}</span><span class=\"k\">);</span>","\ttester<span class=\"k\">.</span>set_groups<span class=\"k\">(</span>","\t\t\t          <span class=\"k\">{</span>","\t\t\t        \t  <span class=\"s\">0</span><span class=\"k\">:</span> <span class=\"k\">{</span>id<span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">,</span> name<span class=\"k\">:</span><span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span>contacts<span class=\"k\">:[</span><span class=\"s\">0</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t        \t  <span class=\"s\">1</span><span class=\"k\">:</span> <span class=\"k\">{</span>id<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span> name<span class=\"k\">:</span><span class=\"s\">\"amici\"</span><span class=\"k\">,</span> contacts<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span><span class=\"k\">}</span>","\t\t\t          <span class=\"k\">}</span>","\t\t\t          <span class=\"k\">);</span>","\t<span class=\"k\">var</span> contact<span class=\"k\">=</span>tester<span class=\"k\">.</span>get_contacts<span class=\"k\">();</span>","\t<span class=\"k\">var</span> laura<span class=\"k\">=</span>contact<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t<span class=\"k\">var</span> groups <span class=\"k\">=</span> tester<span class=\"k\">.</span>getGroupsWhereContactsIs<span class=\"k\">(</span>laura<span class=\"k\">);</span>","\tequal<span class=\"k\">(</span>groups<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span><span class=\"s\">\"famiglia\"</span><span class=\"k\">,</span> <span class=\"s\">\"laura e' correttamente nel gruppo famiglia\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\tequal<span class=\"k\">(</span>groups<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span> <span class=\"s\">\"amici\"</span><span class=\"k\">,</span> <span class=\"s\">\"laura e' correttamente nel gruppo amici\"</span><span class=\"k\">);</span>","\ti<span class=\"k\">++;</span>","\t","\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","",""];
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][1]++;
module("AddressBookPanelPresenterTest", {setup: (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][6]++;
  var element = document.createElement("div");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][7]++;
  element.id = "AddressBookPanel";
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][8]++;
  element.style.position = "absolute";
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][9]++;
  element.style.left = "-999em";
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][10]++;
  document.body.appendChild(element);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][12]++;
  configurationFile = "/ModelManager/WebContent/Conf/servletlocationtest.xml";
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][14]++;
  tester = new AddressBookPanelPresenter();
}), teardown: (function () {
})});
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][20]++;
test("testInitialize()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][21]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][22]++;
  tester.initialize();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][24]++;
  var element = document.getElementById("AddressBookPanel");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][25]++;
  var list = element.childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][26]++;
  equal(list.length, 4, "il numero di figli dell'elemento restituito e' 4");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][28]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][30]++;
  equal(list[0].nodeName, "DIV", "il primo figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][31]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][32]++;
  equal(list[1].nodeName, "DIV", "il secondo figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][33]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][34]++;
  equal(list[2].nodeName, "DIV", "il terzo figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][35]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][36]++;
  equal(list[3].nodeName, "DIV", "il quarto figlio e' un div");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][37]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][39]++;
  equal(list[0].getAttribute("id"), "divFilter", "il primo div si chiama divFilter");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][41]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][42]++;
  equal(list[1].getAttribute("id"), "divSort", "il secondo div si chiama divSort");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][44]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][45]++;
  equal(list[2].getAttribute("id"), "divList", "il terzo div si chiama divList");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][47]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][48]++;
  equal(list[3].getAttribute("id"), "divGroup", "il quarto div si chiama divGroup");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][50]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][52]++;
  var Filter = list[0].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][53]++;
  equal(Filter.length, 2, "il numero di figli di Filter e' 2");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][54]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][56]++;
  equal(Filter[0].nodeName, "INPUT", "il primo figlio di divFilter e' un input");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][58]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][59]++;
  equal(Filter[0].getAttribute("type"), "text", "il tipo dell'input e' text");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][61]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][63]++;
  equal(Filter[1].nodeName, "INPUT", "il secondo figlio di divFilter e' un input");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][65]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][66]++;
  equal(Filter[1].getAttribute("type"), "image", "il tipo dell'input e' button");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][68]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][70]++;
  var Sort = list[1].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][71]++;
  equal(Sort.length, 1, "il numero di figli di Sort e' 1");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][72]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][73]++;
  equal(Sort[0].nodeName, "SELECT", "il figlio di Sort e' un select");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][74]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][75]++;
  equal(Sort[0].getAttribute("id"), "selectSort", "il nome del select e' SelectSort");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][77]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][79]++;
  var List = list[2].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][80]++;
  equal(List.length, 1, "il numero di figli di List e' 1");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][81]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][82]++;
  equal(List[0].nodeName, "UL", "il figlio di List \u00ef\u00bf\u00bd una lista ul");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][83]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][85]++;
  var Group = list[3].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][86]++;
  equal(Group.length, 1, "il numero di figli di Group e' 1");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][87]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][88]++;
  equal(Group[0].nodeName, "SELECT", "il figlio di Group e' un select");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][90]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][91]++;
  equal(Group[0].getAttribute("id"), "selectGroup", "il nome del select e' SelectSort");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][93]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][95]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][98]++;
test("testSetup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][99]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][100]++;
  tester.setup();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][101]++;
  var list = document.getElementById("AddressBookList").childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][103]++;
  equal(list.length, 2, "numero corretto di contatti nella rubrica");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][104]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][106]++;
  equal(list[0].nodeName, "LI", "il primo figlio dell'elemento e' un figlio della lista");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][108]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][110]++;
  var laura = list[1].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][112]++;
  equal(laura.length, 3, "ci sono tre figli");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][113]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][115]++;
  equal(laura[0].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(profilo)");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][117]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][119]++;
  equal(laura[1].nodeName, "#text", "il primo figlio dell'elemento e' un nodo testo");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][121]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][123]++;
  equal(laura[2].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(stato)");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][125]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][127]++;
  equal(laura[0].getAttribute("src"), "x.png", "l'immagine del primo contatto e' corretta");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][129]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][131]++;
  equal(laura[1].data, "Flavia Bacco", "il nome e congnome sono corretti");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][132]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][134]++;
  equal(laura[2].getAttribute("src"), "img/stateavailable.png", "lo stato del primo contatto e' corretto");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][136]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][138]++;
  var flavia = list[0].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][140]++;
  equal(flavia.length, 3, "ci sono tre figli");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][141]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][143]++;
  equal(flavia[0].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(profilo)");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][145]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][147]++;
  equal(flavia[1].nodeName, "#text", "il primo figlio dell'elemento e' un nodo testo");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][149]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][151]++;
  equal(flavia[2].nodeName, "IMG", "il primo figlio dell'elemento e' un immagine(stato)");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][153]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][155]++;
  equal(flavia[0].getAttribute("src"), "y.png", "l'immagine del secondo contatto e' corretta");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][157]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][159]++;
  equal(flavia[1].data, "Laura Pausini", "il nome e congnome sono corretti");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][160]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][162]++;
  equal(flavia[2].getAttribute("src"), "img/stateoffline.png", "lo stato del secondo contatto e' corretto");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][164]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][166]++;
  var listGroup = document.getElementById("selectGroup").childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][167]++;
  equal(listGroup.length, 2, "numero corretto di gruppi nella rubrica");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][168]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][169]++;
  equal(listGroup[0].nodeName, "OPTION", "il primo figlio dell'elemento e' un figlio della lista");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][170]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][171]++;
  var famiglia = listGroup[0].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][173]++;
  equal(famiglia.length, 1, "ci sono tre figli");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][174]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][176]++;
  equal(famiglia[0].nodeName, "#text", "il primo figlio dell'elemento e' un nodo testo");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][177]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][179]++;
  equal(famiglia[0].data, "famiglia", "il nome del gruppo 0 e' famiglia");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][180]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][182]++;
  var amici = listGroup[1].childNodes;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][183]++;
  equal(amici[0].data, "amici", "il nome del gruppo 1 e' amici");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][184]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][185]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][188]++;
test("testHide()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][189]++;
  tester.hide();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][190]++;
  var element = document.getElementById("AddressBookPanel");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][191]++;
  equal(element.style.display, "none", "il pannello viene nascosto correttamente");
}));
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][196]++;
test("testAddContactInGroup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][197]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][198]++;
  tester.set_contacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][199]++;
  tester.set_groups({0: {id: 0, name: "famiglia", contacts: []}});
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][200]++;
  var contact = tester.get_contacts();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][201]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][202]++;
  var group = tester.get_groups();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][203]++;
  var famiglia = group[0];
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][205]++;
  equal(tester.addContactInGroup(laura, famiglia), true, "laura aggiunta correttamente");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][206]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][207]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][210]++;
test("testDeleteContactFromGroup()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][211]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][212]++;
  tester.set_contacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][213]++;
  tester.set_groups({0: {id: 0, name: "famiglia", contacts: []}});
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][214]++;
  var contact = tester.get_contacts();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][215]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][216]++;
  var group = tester.get_groups();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][217]++;
  var famiglia = group[0];
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][219]++;
  tester.addContactInGroup(laura, famiglia);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][220]++;
  equal(tester.deleteContactFromGroup(laura, famiglia), true, "laura rimossa correttamente");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][221]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][222]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][226]++;
test("testContactAlreadyPresent()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][227]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][228]++;
  tester.set_contacts({0: {name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][229]++;
  var contact = tester.get_contacts();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][230]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][231]++;
  equal(tester.contactAlreadyPresent(laura), true, "laura e' nella rubrica");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][232]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][233]++;
  expect(i);
}));
_$jscoverage['AddressBookPanelPresenterTest_ste.js'][236]++;
test("testgetGroupsWhereContactsIs()", (function () {
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][237]++;
  var i = 0;
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][238]++;
  tester.set_contacts({0: {id: 0, name: "Laura", surname: "Pausini", email: "laupau@gmail.com"}});
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][239]++;
  tester.set_groups({0: {id: 0, name: "famiglia", contacts: [0]}, 1: {id: 1, name: "amici", contacts: [0]}});
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][245]++;
  var contact = tester.get_contacts();
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][246]++;
  var laura = contact[0];
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][247]++;
  var groups = tester.getGroupsWhereContactsIs(laura);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][248]++;
  equal(groups[0], "famiglia", "laura e' correttamente nel gruppo famiglia");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][249]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][250]++;
  equal(groups[1], "amici", "laura e' correttamente nel gruppo amici");
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][251]++;
  (i++);
  _$jscoverage['AddressBookPanelPresenterTest_ste.js'][253]++;
  expect(i);
}));
