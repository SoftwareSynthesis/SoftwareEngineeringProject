/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['AccountSettingsPanelPresenterTest.js']) {
  _$jscoverage['AccountSettingsPanelPresenterTest.js'] = [];
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][1] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][4] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][5] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][6] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][16] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][18] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][21] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][23] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][25] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][26] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][29] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][30] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][33] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][34] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][37] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][38] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][41] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][42] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][43] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][44] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][45] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][46] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][47] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][48] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][49] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][50] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][51] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][52] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][55] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][56] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][57] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][60] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][61] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][62] = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][64] = 0;
}
_$jscoverage['AccountSettingsPanelPresenterTest.js'].source = ["module <span class=\"k\">(</span><span class=\"s\">\"AccontSettingsPanelPresenterTest\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","    setup<span class=\"k\">:</span>","        <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\tcommunicationcenter <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","\t\t\tcommunicationcenter<span class=\"k\">.</span>my <span class=\"k\">=</span> <span class=\"k\">{</span>name<span class=\"k\">:</span><span class=\"s\">\"Maria\"</span><span class=\"k\">,</span> surname<span class=\"k\">:</span><span class=\"s\">\"Goretti\"</span><span class=\"k\">,</span> email<span class=\"k\">:</span><span class=\"s\">\"margor@email.it\"</span><span class=\"k\">,</span> picturePath<span class=\"k\">:</span><span class=\"s\">\"xx.png\"</span><span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\ttester <span class=\"k\">=</span> <span class=\"k\">new</span> AccountSettingsPanelPresenter<span class=\"k\">();</span>\t\t\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tteardown<span class=\"k\">:</span> ","\t\t<span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">);</span>","","<span class=\"c\">/* dentro setup le variabili DEVONO esssere GLOBALI*/</span>","","<span class=\"c\">/*Tale test controlla il buon funzionamento dell'inizializzazione AccountSettingPanel</span>","<span class=\"c\">controlla che l'albero sia stato costruito correttamente e per i vari nodi controlla che il loro contenuto sia stato inserito correttamente*/</span>","test<span class=\"k\">(</span><span class=\"s\">\"testCreatePanel()\"</span><span class=\"k\">,</span>","    <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t\t","\t\t<span class=\"c\">// creo l'elemento 'AccountSettingsPanel'</span>","\t\t<span class=\"k\">var</span> element <span class=\"k\">=</span> tester<span class=\"k\">.</span>createPanel<span class=\"k\">();</span>","\t\t<span class=\"c\">// estraggo la lista dei figli di questo pannello</span>","\t\t<span class=\"k\">var</span> list <span class=\"k\">=</span> element<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","\t\t<span class=\"c\">// controllo che abbia esattamente tre figli</span>","\t\tequal<span class=\"k\">(</span>list<span class=\"k\">.</span>length<span class=\"k\">,</span><span class=\"s\">3</span><span class=\"k\">,</span><span class=\"s\">\"il numero di figli dell'elemento restituito e' 3\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\t<span class=\"c\">// controllo che il primo figlio sia la mia immagine personale</span>","\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"IMG\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo figlio dell'elemento e' un'immagine\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\t<span class=\"c\">// controllo che il secondo figlio sia una lista</span>","\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"UL\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo figlio dell'elemento e' una lista\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\t<span class=\"c\">// controllo che il terzo elemento sia un bottone</span>","\t\tequal<span class=\"k\">(</span>list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>nodeName<span class=\"k\">,</span> <span class=\"s\">\"BUTTON\"</span><span class=\"k\">,</span> <span class=\"s\">\"il primo figlio dell'elemento e' un bottone\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\t<span class=\"c\">// estraggo la lista dei dati personali e testo tutti i suoi nodi</span>","\t\t<span class=\"k\">var</span> items <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>childNodes<span class=\"k\">;</span>","\t\tequal<span class=\"k\">(</span>items<span class=\"k\">.</span>length<span class=\"k\">,</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"s\">\"i dati personali sono 4 elementi\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> items<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>innerHTML<span class=\"k\">;</span><span class=\"c\">// estraggo il &lt;li&gt;Maria&lt;/li&gt;</span>","\t\tequal<span class=\"k\">(</span>name<span class=\"k\">,</span> <span class=\"s\">\"Maria\"</span><span class=\"k\">,</span> <span class=\"s\">\"il nome &#195;&#168; corretto\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t<span class=\"k\">var</span> surname <span class=\"k\">=</span> items<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>innerHTML<span class=\"k\">;</span>","\t\tequal<span class=\"k\">(</span>surname<span class=\"k\">,</span> <span class=\"s\">\"Goretti\"</span><span class=\"k\">,</span> <span class=\"s\">\"il cognome &#195;&#168; corretto\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t<span class=\"k\">var</span> email <span class=\"k\">=</span> items<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>innerHTML<span class=\"k\">;</span>","\t\tequal<span class=\"k\">(</span>email<span class=\"k\">,</span> <span class=\"s\">\"margor@email.it\"</span><span class=\"k\">,</span> <span class=\"s\">\"l'email &#195;&#168; corretta\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\t<span class=\"c\">// testo l'immagine</span>","\t\t<span class=\"k\">var</span> picture <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">);</span>","\t\tequal<span class=\"k\">(</span>picture<span class=\"k\">,</span> <span class=\"s\">\"xx.png\"</span><span class=\"k\">,</span> <span class=\"s\">\"l'immagine ha il percorso corretto\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\t<span class=\"c\">// testo il contenuto del bottone</span>","\t\t<span class=\"k\">var</span> text <span class=\"k\">=</span> list<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>innerHTML<span class=\"k\">;</span>","\t\tequal<span class=\"k\">(</span>text<span class=\"k\">,</span> <span class=\"s\">\"Modifica dati\"</span><span class=\"k\">,</span> <span class=\"s\">\"il testo del bottone &#195;&#168; corretto\"</span><span class=\"k\">);</span>","\t\ti<span class=\"k\">++;</span>","\t\t","\t\texpect<span class=\"k\">(</span>i<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>",""];
_$jscoverage['AccountSettingsPanelPresenterTest.js'][1]++;
module("AccontSettingsPanelPresenterTest", {setup: (function () {
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][4]++;
  communicationcenter = new Object();
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][5]++;
  communicationcenter.my = {name: "Maria", surname: "Goretti", email: "margor@email.it", picturePath: "xx.png"};
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][6]++;
  tester = new AccountSettingsPanelPresenter();
}), teardown: (function () {
})});
_$jscoverage['AccountSettingsPanelPresenterTest.js'][16]++;
test("testCreatePanel()", (function () {
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][18]++;
  var i = 0;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][21]++;
  var element = tester.createPanel();
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][23]++;
  var list = element.childNodes;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][25]++;
  equal(list.length, 3, "il numero di figli dell'elemento restituito e' 3");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][26]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][29]++;
  equal(list[0].nodeName, "IMG", "il primo figlio dell'elemento e' un'immagine");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][30]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][33]++;
  equal(list[1].nodeName, "UL", "il primo figlio dell'elemento e' una lista");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][34]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][37]++;
  equal(list[2].nodeName, "BUTTON", "il primo figlio dell'elemento e' un bottone");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][38]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][41]++;
  var items = list[1].childNodes;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][42]++;
  equal(items.length, 3, "i dati personali sono 4 elementi");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][43]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][44]++;
  var name = items[0].innerHTML;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][45]++;
  equal(name, "Maria", "il nome \u00c3\u00a8 corretto");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][46]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][47]++;
  var surname = items[1].innerHTML;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][48]++;
  equal(surname, "Goretti", "il cognome \u00c3\u00a8 corretto");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][49]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][50]++;
  var email = items[2].innerHTML;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][51]++;
  equal(email, "margor@email.it", "l'email \u00c3\u00a8 corretta");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][52]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][55]++;
  var picture = list[0].getAttribute("src");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][56]++;
  equal(picture, "xx.png", "l'immagine ha il percorso corretto");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][57]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][60]++;
  var text = list[2].innerHTML;
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][61]++;
  equal(text, "Modifica dati", "il testo del bottone \u00c3\u00a8 corretto");
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][62]++;
  (i++);
  _$jscoverage['AccountSettingsPanelPresenterTest.js'][64]++;
  expect(i);
}));
